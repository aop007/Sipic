D G "__PCD__" 0 0 ""4.104""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""01-févr.-12""
D G "__TIME__" 0 0 ""21:40:53""
D G "__INCLUDES__" 1 2 ""
C G "" 1 5 1 "*"
C G "" 1 5 1 "*"
C G "" 1 5 1 "*"
D G "__MAIN__" 2 2 ""
d G "PIN_B0" 3 25 "5696"
d G "PIN_B1" 3 26 "5697"
d G "PIN_B2" 3 27 "5698"
d G "PIN_B3" 3 28 "5699"
d G "PIN_B4" 3 29 "5700"
d G "PIN_B5" 3 30 "5701"
d G "PIN_B6" 3 31 "5702"
d G "PIN_B7" 3 32 "5703"
d G "PIN_B8" 3 33 "5704"
d G "PIN_C13" 3 35 "5757"
d G "PIN_C14" 3 36 "5758"
d G "PIN_C15" 3 37 "5759"
d G "PIN_D0" 3 39 "5792"
d G "PIN_D1" 3 40 "5793"
d G "PIN_D2" 3 41 "5794"
d G "PIN_D3" 3 42 "5795"
d G "PIN_E0" 3 44 "5840"
d G "PIN_E1" 3 45 "5841"
d G "PIN_E2" 3 46 "5842"
d G "PIN_E3" 3 47 "5843"
d G "PIN_E4" 3 48 "5844"
d G "PIN_E5" 3 49 "5845"
d G "PIN_E8" 3 50 "5848"
d G "PIN_F0" 3 52 "5888"
d G "PIN_F1" 3 53 "5889"
d G "PIN_F2" 3 54 "5890"
d G "PIN_F3" 3 55 "5891"
d G "PIN_F4" 3 56 "5892"
d G "PIN_F5" 3 57 "5893"
d G "PIN_F6" 3 58 "5894"
d G "FALSE" 3 61 "0"
d G "TRUE" 3 62 "1"
d G "BYTE" 3 64 "unsigned int8"
d G "BOOLEAN" 3 65 "int1"
d G "getc" 3 67 "getch"
d G "fgetc" 3 68 "getch"
d G "getchar" 3 69 "getch"
d G "putc" 3 70 "putchar"
d G "fputc" 3 71 "putchar"
d G "fgets" 3 72 "gets"
d G "fputs" 3 73 "puts"
d G "UART_ADDRESS" 3 79 "2"
d G "UART_DATA" 3 80 "4"
d G "UART_AUTODETECT" 3 81 "8"
d G "UART_AUTODETECT_NOWAIT" 3 82 "9"
d G "UART_WAKEUP_ON_RDA" 3 83 "10"
d G "UART_SEND_BREAK" 3 84 "13"
d G "WDT_ON" 3 91 "1"
d G "WDT_OFF" 3 92 "0"
d G "RESTART_POWER_UP" 3 97 "0"
d G "RESTART_BROWNOUT" 3 98 "1"
d G "RESTART_WATCHDOG" 3 99 "4"
d G "RESTART_SOFTWARE" 3 100 "6"
d G "RESTART_MCLR" 3 101 "7"
d G "RESTART_ILLEGAL_OP" 3 102 "14"
d G "RESTART_TRAP_CONFLICT" 3 103 "15"
d G "SLEEP_FULL" 3 106 "0" "Default"
d G "SLEEP_IDLE" 3 107 "1" "Clock and peripherals don't stop"
d G "OSC_INTERNAL" 3 111 "32"
d G "OSC_CRYSTAL" 3 112 "1"
d G "OSC_CLOCK" 3 113 "2"
d G "OSC_RC" 3 114 "3"
d G "OSC_SECONDARY" 3 115 "16"
d G "TMR_DISABLED" 3 122 "0x0000"
d G "TMR_INTERNAL" 3 123 "0xA000"
d G "TMR_EXTERNAL" 3 124 "0xA002"
d G "TMR_GATE" 3 125 "0x0040"
d G "T1_EXTERNAL_SYNC" 3 126 "0xA006" "This only applies to Timer1"
d G "T1_EXTERNAL_RTC" 3 127 "0xC002" "This only applies to Timer1"
d G "TMR_DIV_BY_1" 3 129 "0x0000"
d G "TMR_DIV_BY_8" 3 130 "0x0010"
d G "TMR_DIV_BY_64" 3 131 "0x0020"
d G "TMR_DIV_BY_256" 3 132 "0x0030"
d G "TMR_32_BIT" 3 133 "0x0008" "Only for even numbered timers"
d G "CAPTURE_OFF" 3 139 "0x0000" "Capture OFF"
d G "CAPTURE_EE" 3 140 "0x0001" "Capture Every Edge"
d G "CAPTURE_FE" 3 141 "0x0002" "Capture Falling Edge"
d G "CAPTURE_RE" 3 142 "0x0003" "Capture Rising Edge"
d G "CAPTURE_DIV_4" 3 143 "0x0004" "Capture Every 4th Rising Edge"
d G "CAPTURE_DIV_16" 3 144 "0x0005" "Capture Every 16th Rising Edge"
d G "CAPTURE_INTERRUPT_ONLY" 3 145 "0x0007" "Interrupt on Rising Edge when in Sleep or Idle"
d G "INTERRUPT_EVERY_CAPTURE" 3 148 "0x0000" "Interrupt on every capture event"
d G "INTERRUPT_SECOND_CAPTURE" 3 149 "0x0020" "Interrupt on every second capture event"
d G "INTERRUPT_THIRD_CAPTURE" 3 150 "0x0040" "Interrupt on every third capture event"
d G "INTERRUPT_FOURTH_CAPTURE" 3 151 "0x0060" "Interrupt on every fourth capture event"
d G "CAPTURE_TIMER2" 3 154 "0x0080" "On capture event Timer 2 is captured"
d G "CAPTURE_TIMER3" 3 155 "0x0000" "On capture event Timer 3 is captured"
d G "CAPTURE_HALT_IDLE" 3 158 "0x2000" "Capture module halts during idle mode"
d G "CAPTURE_CONTINUE_IDLE" 3 159 "0x0000" "Capture module continues during idle mode"
d G "COMPARE_OFF" 3 165 "0x0000" "Compare OFF"
d G "COMPARE_SET_ON_MATCH" 3 166 "0x0001" "Pin from low to high on match"
d G "COMPARE_CLR_ON_MATCH" 3 167 "0x0002" "Pin from high to low on match"
d G "COMPARE_TOGGEL" 3 168 "0x0003" "Pin will toggle on every match occurrence"
d G "COMPARE_SINGLE_PULSE" 3 169 "0x0004" "Pin will generate single pulse on first match"
d G "COMPARE_CONT_PULSE" 3 170 "0x0005" "Pin will pulse for every match"
d G "COMPARE_PWM" 3 171 "0x0006" "Compare operates as PWM with fault pin disabled"
d G "COMPARE_PWM_FAULT" 3 172 "0x0007" "Compare operates as PWM with fault pin enabled"
d G "COMPARE_TIMER2" 3 175 "0x0000" "Timer 2 is the base timer"
d G "COMPARE_TIMER3" 3 176 "0x0008" "Timer 3 is the base timer"
d G "COMPARE_HALT_IDLE" 3 179 "0x2000" "Compare module halts during idle mode"
d G "COMPARE_CONTINUE_IDLE" 3 180 "0x0000" "Compare module continues during idle mode"
d G "SPI_MASTER" 3 185 "0x0020"
d G "SPI_SLAVE" 3 186 "0x1000"
d G "SPI_L_TO_H" 3 187 "0"
d G "SPI_H_TO_L" 3 188 "0x0100"
d G "SPI_CLK_DIV_1" 3 189 "0x001F"
d G "SPI_CLK_DIV_4" 3 190 "0x001E"
d G "SPI_CLK_DIV_16" 3 191 "0x001D"
d G "SPI_CLK_DIV_64" 3 192 "0x001C"
d G "SPI_MODE_16B" 3 193 "0x0400"
d G "SPI_SS_DISABLED" 3 194 "0x8000"
d G "ADC_OFF" 3 203 "0x10000"
d G "ADC_CLOCK" 3 204 "0x0000" "External"
d G "ADC_CLOCK_DIV_2" 3 205 "0x0001"
d G "ADC_CLOCK_DIV_4" 3 206 "0x0003"
d G "ADC_CLOCK_DIV_8" 3 207 "0x0007"
d G "ADC_CLOCK_DIV_16" 3 208 "0x000F"
d G "ADC_CLOCK_DIV_32" 3 209 "0x001F"
d G "ADC_CLOCK_DIV_64" 3 210 "0x003F"
d G "ADC_CLOCK_INTERNAL" 3 211 "0x0080" "Internal"
d G "ADC_TAD_MUL_0" 3 215 "0x0000"
d G "ADC_TAD_MUL_2" 3 216 "0x0200"
d G "ADC_TAD_MUL_4" 3 217 "0x0400"
d G "ADC_TAD_MUL_8" 3 218 "0x0800"
d G "ADC_TAD_MUL_16" 3 219 "0x1000"
d G "ADC_TAD_MUL_31" 3 220 "0x1F00"
d G "ADC_START_AND_READ" 3 223 "0x07"
d G "ADC_START_ONLY" 3 224 "0x01"
d G "ADC_READ_ONLY" 3 225 "0x06"
d G "NO_ANALOGS" 3 232 "0" "None"
d G "ALL_ANALOG" 3 233 "0xFFFFFFFF" "All"
d G "sAN0" 3 234 "0x00000001" "| B0"
d G "sAN1" 3 235 "0x00000002" "| B1"
d G "sAN2" 3 236 "0x00000004" "| B2"
d G "sAN3" 3 237 "0x00000008" "| B3"
d G "sAN4" 3 238 "0x00000010" "| B4"
d G "sAN5" 3 239 "0x00000020" "| B5"
d G "sAN6" 3 240 "0x00000040" "| B6"
d G "sAN7" 3 241 "0x00000080" "| B7"
d G "sAN8" 3 242 "0x00000100" "| B8"
d G "sAN9" 3 243 "0x00000200" "| B9"
d G "sAN10" 3 244 "0x00000400" "| B10"
d G "sAN11" 3 245 "0x00000800" "| B11"
d G "sAN12" 3 246 "0x00001000" "| B12"
d G "sAN13" 3 247 "0x00002000" "| B13"
d G "sAN14" 3 248 "0x00004000" "| B14"
d G "sAN15" 3 249 "0x00008000" "| 15"
d G "sAN16" 3 250 "0x00010000" "| C1"
d G "sAN17" 3 251 "0x00020000" "| C2"
d G "sAN18" 3 252 "0x00040000" "| C3"
d G "sAN19" 3 253 "0x00080000" "| 4"
d G "sAN20" 3 254 "0x00100000" "| A12"
d G "sAN21" 3 255 "0x00200000" "| A13"
d G "sAN22" 3 256 "0x00400000" "| A6"
d G "sAN23" 3 257 "0x00800000" "| A7"
d G "sAN24" 3 258 "0x01000000" "| E0"
d G "sAN25" 3 259 "0x02000000" "| E1"
d G "sAN26" 3 260 "0x04000000" "| E2"
d G "sAN27" 3 261 "0x08000000" "| E3"
d G "sAN28" 3 262 "0x10000000" "| E4"
d G "sAN29" 3 263 "0x20000000" "| E5"
d G "sAN30" 3 264 "0x40000000" "| E6"
d G "sAN31" 3 265 "0x80000000" "| 7"
d G "VSS_VDD" 3 268 "0x0000" "Range 0-Vdd"
d G "VREF_VREF" 3 269 "0x6000" "Range VrefL-VrefH"
d G "VREF_VDD" 3 270 "0x4000" "Range VrefL-Vdd"
d G "VSS_VREF" 3 271 "0x2000" "Range 0-VrefH"
d G "QEI_DISABLED" 3 278 "0"
d G "QEI_MODE_X2" 3 279 "0x0400"
d G "QEI_MODE_X4" 3 280 "0x0600"
d G "QEI_MODE_TIMER" 3 281 "0x0100"
d G "QEI_STOP_WHEN_IDLE" 3 282 "0x2000"
d G "QEI_SWAP_AB" 3 283 "0x0080"
d G "QEI_OUTPUT_ENABLE" 3 284 "0x0040"
d G "QEI_RESET_WHEN_MAXCOUNT" 3 285 "0x0100"
d G "QEI_RESET_WHEN_IDX_PULSE" 3 286 "0x0004"
d G "QEI_TIMER_GATED" 3 287 "0x0020"
d G "QEI_TIMER_INTERNAL" 3 288 "0x0000"
d G "QEI_TIMER_EXTERNAL" 3 289 "0x0002"
d G "QEI_TIMER_DIV_BY_1" 3 290 "0x0000"
d G "QEI_TIMER_DIV_BY_8" 3 291 "0x0008"
d G "QEI_TIMER_DIV_BY_64" 3 292 "0x0010"
d G "QEI_TIMER_DIV_BY_256" 3 293 "0x0018"
d G "QEI_FILTER_DIV_1" 3 295 "0x0000"
d G "QEI_FILTER_DIV_2" 3 296 "0x0010"
d G "QEI_FILTER_DIV_4" 3 297 "0x0020"
d G "QEI_FILTER_DIV_16" 3 298 "0x0030"
d G "QEI_FILTER_DIV_32" 3 299 "0x0040"
d G "QEI_FILTER_DIV_64" 3 300 "0x0050"
d G "QEI_FILTER_DIV_128" 3 301 "0x0060"
d G "QEI_FILTER_DIV_256" 3 302 "0x0070"
d G "QEI_FILTER_OUTPUT" 3 303 "0x0080"
d G "QEI_NO_ERROR_INTS" 3 304 "0x0100"
d G "QEI_IDX_WHEN_A0" 3 305 "0x0000" "for 2X mode"
d G "QEI_IDX_WHEN_A1" 3 306 "0x0200" "for 2X mode"
d G "QEI_IDX_WHEN_B0" 3 307 "0x0400" "for 2X mode"
d G "QEI_IDX_WHEN_B1" 3 308 "0x0600" "for 2X mode"
d G "QEI_IDX_WHEN_A0_B0" 3 309 "0x0000" "for 4X mode"
d G "QEI_IDX_WHEN_A1_B0" 3 310 "0x0200" "for 4X mode"
d G "QEI_IDX_WHEN_A0_B1" 3 311 "0x0400" "for 4X mode"
d G "QEI_IDX_WHEN_A1_B1" 3 312 "0x0600" "for 4X mode"
d G "QEI_POS_ERROR" 3 314 "0x8000"
d G "QEI_FORWARD" 3 315 "0x0800"
d G "QEI_INDEX_PIN" 3 316 "0x1000"
d G "MPWM_DISABLED" 3 323 "0"
d G "MPWM_FREE_RUN" 3 324 "0x8000"
d G "MPWM_SINGLE_PULSE" 3 325 "0x8001"
d G "MPWM_UP_DOWN" 3 326 "0x8002"
d G "MPWM_UP_DOWN_WITH_INTS" 3 327 "0x8003"
d G "MPWM_HALT_WHEN_IDLE" 3 329 "0x2000"
d G "MPWM_DUTY_UPDATES_IMMEADIATE" 3 330 "0x40000"
d G "MPWM_SYNC_OVERRIDES" 3 331 "0x20000"
d G "MPWM_DISABLE_UPDATES" 3 332 "0x10000"
d G "MPWM_LATCH_FAULTS" 3 333 "0x100000"
d G "MPWM_INDEPENDENT" 3 336 "0x0001"
d G "MPWM_ENABLE" 3 337 "0x0006" "both H and L"
d G "MPWM_ENABLE_H" 3 338 "0x0004"
d G "MPWM_ENABLE_L" 3 339 "0x0002"
d G "MPWM_FORCE_L_0" 3 341 "0x0020"
d G "MPWM_FORCE_L_1" 3 342 "0x0030"
d G "MPWM_FORCE_H_0" 3 343 "0x0040"
d G "MPWM_FORCE_H_1" 3 344 "0x0050"
d G "MPWM_FAULT_LA_HA" 3 346 "0x0700"
d G "MPWM_FAULT_LA_HI" 3 347 "0x0500"
d G "MPWM_FAULT_LI_HA" 3 348 "0x0600"
d G "MPWM_FAULT_LI_HI" 3 349 "0x0400"
d G "MPWM_FAULT_NO_CHANGE" 3 350 "0x0000"
d G "L_TO_H" 3 358 "0x40"
d G "H_TO_L" 3 359 "0"
d G "INTR_GLOBAL" 3 362 "0x400"
d G "INTR_NORMAL" 3 363 "0x100"
d G "INTR_ALTERNATE" 3 364 "0x200"
d G "INTR_NESTING" 3 365 "0x300"
d G "INTR_LEVEL0" 3 366 "0x500"
d G "INTR_LEVEL1" 3 367 "0x501"
d G "INTR_LEVEL2" 3 368 "0x502"
d G "INTR_LEVEL3" 3 369 "0x503"
d G "INTR_LEVEL4" 3 370 "0x504"
d G "INTR_LEVEL5" 3 371 "0x505"
d G "INTR_LEVEL6" 3 372 "0x506"
d G "INTR_LEVEL7" 3 373 "0x507"
d G "INTR_CN_PIN" 3 375 "0x8000" "or in a PIN_xx constant"
d G "INT_OSCFAIL" 3 377 "1"
d G "INT_ADDRERR" 3 378 "2"
d G "INT_STACKERR" 3 379 "3"
d G "INT_MATHERR" 3 380 "4"
d G "INT_DMAERR" 3 381 "5"
d G "INT_EXT0" 3 382 "6"
d G "INT_IC1" 3 383 "7"
d G "INT_OC1" 3 384 "8"
d G "INT_TIMER1" 3 385 "9"
d G "INT_IC2" 3 386 "10"
d G "INT_OC2" 3 387 "11"
d G "INT_TIMER2" 3 388 "12"
d G "INT_TIMER3" 3 389 "13"
d G "INT_SPI1" 3 390 "14"
d G "INT_RDA" 3 391 "15"
d G "INT_TBE" 3 392 "16"
d G "INT_ADC1" 3 393 "17"
d G "INT_EEPROM" 3 394 "18"
d G "INT_SI2C" 3 395 "19"
d G "INT_MI2C" 3 396 "20"
d G "INT_CNI" 3 397 "21"
d G "INT_EXT1" 3 398 "22"
d G "INT_IC7" 3 399 "24"
d G "INT_IC8" 3 400 "25"
d G "INT_OC3" 3 401 "27"
d G "INT_OC4" 3 402 "29"
d G "INT_TIMER4" 3 403 "31"
d G "INT_TIMER5" 3 404 "33"
d G "INT_EXT2" 3 405 "35"
d G "INT_RDA2" 3 406 "36"
d G "INT_TBE2" 3 407 "37"
d G "INT_PWM1" 3 408 "58"
d G "INT_QEI" 3 409 "60"
d G "INT_FAULTA" 3 410 "66"
D G "USE_UART_2" 2 5 ""
D G "DSPIC30F_OSC" 2 30 "118662200" "29665550"
D G "LED_B" 2 39 "PIN_B0"
D G "LED_G" 2 40 "PIN_B1"
D G "PUSH" 2 41 "PIN_B2"
D G "SYNC" 2 42 "PIN_B3"
D G "ENCA" 2 43 "PIN_B4"
D G "ENCB" 2 44 "PIN_B5"
D G "AMB_LUM" 2 45 "PIN_B6"
D G "LED_R" 2 46 "PIN_B7"
D G "SHDN_5V" 2 47 "PIN_B8"
D G "SOSCI" 2 49 "PIN_C13"
D G "SOSCO" 2 50 "PIN_C14"
D G "LOAD_CTRL" 2 52 "PIN_E0"
D G "CHIME" 2 53 "PIN_E2"
D G "SCK" 2 54 "PIN_E3"
D G "SISO" 2 55 "PIN_E4"
D G "STB" 2 56 "PIN_E5"
D G "RX" 2 60 "PIN_F4"
D G "TX" 2 61 "PIN_F5"
D G "max" 2 82 "(a,b) a > b ? a : b"
D G "min" 2 83 "(a,b) ((a) > (b) ? (a) : (b))"
T G "WORD_VAL" 2 89 "{sint16 Val,sint8[2] v}"
T G "DWORD_VAL" 2 95 "{sint32 Val,sint8[4] v}"
D G "LOWER_LSB" 2 96 "(a)    (a).v[0]"
D G "LOWER_MSB" 2 97 "(a)    (a).v[1]"
D G "UPPER_LSB" 2 98 "(a)    (a).v[2]"
D G "UPPER_MSB" 2 99 "(a)    (a).v[3]"
D G "TRANSMIT_TLV_ENABLED" 2 102 ""
V G "previousPOSCNT" 2 105 "sint16"
V G "currentPOSCNT" 2 106 "sint16"
E G "ALARM_MASTER_OFF" 2 111 "0"
E G "ALARM_STANDBY" 2 112 "1"
E G "ALARM_RAMP" 2 113 "2"
E G "ALARM_WAKE" 2 114 "3"
E G "ALARM_SNOOZE" 2 115 "4"
E G "ALARM_SNOOZE_RAMP" 2 116 "5"
E G "ALARM_LAMP_ON" 2 117 "6"
T G "ALARM_DATA" 2 131 "{int32 SnoozeBinaryTime,int32 AlarmBinaryTime,int32 CurrentBinaryTime,int32 MainLoops,int32 PulseWidthErr,int32 ButtonDownTick,ALARM_STATE AlarmState}"
V G "alarmData" 2 133 "ALARM_DATA" "(C) Copyright 1996,2008 Custom Computer Services            ////"
D G "MATH_H" 4 21 ""
D G "PI" 4 26 "3.1415926535897932"
D G "SQRT2" 4 29 "1.4142135623730950"
C L "CEIL_FLOOR" 4 3 3 "FUNCTION"
F G "CEIL_FLOOR" 4 36 "float()"
V L "x" 4 36 "float"
V L "n" 4 36 "int8"
V L "y" 4 38 "float"
V L "res" 4 38 "float"
V L "l" 4 39 "int16"
V L "s" 4 40 "int1"
C L "CEIL_FLOOR" 4 3 2 "FUNCTION"
F G "CEIL_FLOOR" 4 87 "?()"
V L "x" 4 87 "?"
V L "n" 4 87 "int8"
V L "y" 4 89 "?"
V L "res" 4 89 "?"
V L "l" 4 90 "int16"
V L "s" 4 91 "int1"
C L "CEIL_FLOOR" 4 3 1 "FUNCTION"
F G "CEIL_FLOOR" 4 137 "?()"
V L "x" 4 137 "?"
V L "n" 4 137 "int8"
V L "y" 4 139 "?"
V L "res" 4 139 "?"
V L "l" 4 140 "int16"
V L "s" 4 141 "int1"
C L "floor" 4 3 3 "FUNCTION"
F G "floor" 4 192 "float()"
V L "x" 4 192 "float"
C L "floor" 4 3 2 "FUNCTION"
F G "floor" 4 199 "?()"
V L "x" 4 199 "?"
C L "floor" 4 3 1 "FUNCTION"
F G "floor" 4 205 "?()"
V L "x" 4 205 "?"
C L "ceil" 4 3 3 "FUNCTION"
F G "ceil" 4 218 "float()"
V L "x" 4 218 "float"
C L "ceil" 4 3 2 "FUNCTION"
F G "ceil" 4 225 "?()"
V L "x" 4 225 "?"
C L "ceil" 4 3 1 "FUNCTION"
F G "ceil" 4 231 "?()"
V L "x" 4 231 "?"
D G "fabs" 4 244 "abs"
C L "fmod" 4 3 6 "FUNCTION"
F G "fmod" 4 256 "float()"
V L "x" 4 256 "float"
V L "y" 4 256 "float"
V L "i" 4 258 "float"
C L "fmod" 4 3 2 "FUNCTION"
F G "fmod" 4 276 "?()"
V L "x" 4 276 "?"
V L "y" 4 276 "?"
V L "i" 4 278 "?"
C L "fmod" 4 3 1 "FUNCTION"
F G "fmod" 4 294 "?()"
V L "x" 4 294 "?"
V L "y" 4 294 "?"
V L "i" 4 296 "?"
D G "LN2" 4 319 "0.6931471805599453"
V G "pe" 4 321 "float[6]"
F G "exp" 4 325 "float()"
V L "x" 4 325 "float"
V L "y" 4 327 "float"
V L "res" 4 327 "float"
V L "r" 4 327 "float"
V L "data1" 4 329 "sint8"
V L "n" 4 331 "sint8"
V L "s" 4 332 "int1"
C L "exp" 4 3 1 "FUNCTION"
C L "exp" 4 3 2 "FUNCTION"
F G "exp" 4 384 "?()"
V L "x" 4 384 "?"
V L "y" 4 386 "?"
V L "res" 4 386 "?"
V L "r" 4 386 "?"
V L "data1" 4 387 "sint8"
V L "n" 4 388 "sint8"
V L "s" 4 389 "int1"
C L "exp" 4 3 1 "FUNCTION"
F G "exp" 4 433 "?()"
V L "x" 4 433 "?"
V L "y" 4 435 "?"
V L "res" 4 435 "?"
V L "r" 4 435 "?"
V L "data1" 4 436 "int16"
V L "data2" 4 436 "int16"
V L "p" 4 437 "*int16"
V L "n" 4 438 "sint16"
V L "s" 4 439 "int1"
V G "pl" 4 496 "float[4]"
V G "ql" 4 497 "float[4]"
C L "log" 4 3 3 "FUNCTION"
F G "log" 4 505 "float()"
V L "x" 4 505 "float"
V L "y" 4 507 "float"
V L "res" 4 507 "float"
V L "r" 4 507 "float"
V L "y2" 4 507 "float"
V L "data1" 4 509 "int8"
V L "data2" 4 509 "int8"
V L "n" 4 511 "sint8"
C L "log" 4 3 1 "FUNCTION"
C L "log" 4 3 2 "FUNCTION"
F G "log" 4 583 "?()"
V L "x" 4 583 "?"
V L "y" 4 585 "?"
V L "res" 4 585 "?"
V L "r" 4 585 "?"
V L "y2" 4 585 "?"
V L "data1" 4 586 "int8"
V L "data2" 4 586 "int8"
V L "n" 4 587 "sint8"
V G "pl_64" 4 653 "float[4]"
V G "ql_64" 4 654 "float[4]"
F G "log" 4 656 "?()"
V L "x" 4 656 "?"
V L "y" 4 658 "?"
V L "res" 4 658 "?"
V L "r" 4 658 "?"
V L "y2" 4 658 "?"
V L "data1" 4 659 "int16"
V L "data2" 4 659 "int16"
V L "p" 4 660 "*int16"
V L "n" 4 661 "sint16"
D G "LN10" 4 729 "2.3025850929940456"
C L "log10" 4 3 3 "FUNCTION"
F G "log10" 4 737 "float()"
V L "x" 4 737 "float"
V L "r" 4 739 "float"
C L "log10" 4 3 2 "FUNCTION"
F G "log10" 4 749 "?()"
V L "x" 4 749 "?"
V L "r" 4 751 "?"
C L "log10" 4 3 1 "FUNCTION"
F G "log10" 4 759 "?()"
V L "x" 4 759 "?"
V L "r" 4 761 "?"
C L "modf" 4 3 6 "FUNCTION"
F G "modf" 4 778 "float()"
V L "value" 4 778 "float"
V L "iptr" 4 778 "*float"
C L "modf" 4 3 2 "FUNCTION"
F G "modf" 4 786 "?()"
V L "value" 4 786 "?"
V L "iptr" 4 786 "?"
C L "modf" 4 3 1 "FUNCTION"
F G "modf" 4 792 "?()"
V L "value" 4 792 "?"
V L "iptr" 4 792 "?"
C L "pwr" 4 3 4 "FUNCTION"
F G "pwr" 4 806 "float()"
V L "x" 4 806 "float"
V L "y" 4 806 "float"
C L "pwr" 4 3 2 "FUNCTION"
F G "pwr" 4 825 "?()"
V L "x" 4 825 "?"
V L "y" 4 825 "?"
C L "pwr" 4 3 1 "FUNCTION"
F G "pwr" 4 842 "?()"
V L "x" 4 842 "?"
V L "y" 4 842 "?"
C L "pow" 4 3 5 "FUNCTION"
F G "pow" 4 869 "float()"
V L "x" 4 869 "float"
V L "y" 4 869 "float"
C L "pow" 4 3 2 "FUNCTION"
F G "pow" 4 888 "?()"
V L "x" 4 888 "?"
V L "y" 4 888 "?"
C L "pow" 4 3 1 "FUNCTION"
F G "pow" 4 906 "?()"
V L "x" 4 906 "?"
V L "y" 4 906 "?"
C L "sqrt" 4 3 3 "FUNCTION"
F G "sqrt" 4 930 "float()"
V L "x" 4 930 "float"
V L "y" 4 932 "float"
V L "res" 4 932 "float"
V L "data1" 4 934 "int16"
V L "data2" 4 934 "int16"
V L "p" 4 936 "*int8"
C L "sqrt" 4 3 2 "FUNCTION"
F G "sqrt" 4 1002 "?()"
V L "x" 4 1002 "?"
V L "y" 4 1004 "?"
V L "res" 4 1004 "?"
V L "data1" 4 1005 "int16"
V L "data2" 4 1005 "int16"
V L "p" 4 1006 "*int8"
C L "sqrt" 4 3 1 "FUNCTION"
F G "sqrt" 4 1069 "?()"
V L "x" 4 1069 "?"
V L "y" 4 1071 "?"
V L "res" 4 1071 "?"
V L "p" 4 1072 "*int16"
V L "temp1" 4 1073 "int16"
V L "temp2" 4 1073 "int16"
D G "PI_DIV_BY_TWO" 4 1125 "1.5707963267948966"
C L "cos" 4 3 3 "FUNCTION"
F G "cos" 4 1136 "float()"
V L "x" 4 1136 "float"
V L "y" 4 1138 "float"
V L "t" 4 1138 "float"
V L "t2" 4 1138 "float"
V L "quad" 4 1139 "int8"
V L "i" 4 1139 "int8"
V L "frac" 4 1140 "float"
V L "p" 4 1141 "float[6]" "by the series definition for cosine"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 2 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 2 "FUNCTION"
F G "cos" 4 1183 "?()"
V L "x" 4 1183 "?"
V L "y" 4 1185 "?"
V L "t" 4 1185 "?"
V L "t2" 4 1185 "?"
V L "quad" 4 1186 "int8"
V L "i" 4 1186 "int8"
V L "frac" 4 1187 "?"
V L "p" 4 1188 "?[6]" "by the series definition for cosine"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 2 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
F G "cos" 4 1227 "?()"
V L "x" 4 1227 "?"
V L "y" 4 1229 "?"
V L "t" 4 1229 "?"
V L "t2" 4 1229 "?"
V L "quad" 4 1230 "int8"
V L "i" 4 1230 "int8"
V L "frac" 4 1231 "?"
V L "p" 4 1232 "?[6]" "by the series definition for cosine"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 2 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "cos" 4 3 1 "FUNCTION"
C L "sin" 4 3 3 "FUNCTION"
F G "sin" 4 1278 "float()"
V L "x" 4 1278 "float"
C L "sin" 4 3 2 "FUNCTION"
F G "sin" 4 1286 "?()"
V L "x" 4 1286 "?"
C L "sin" 4 3 1 "FUNCTION"
F G "sin" 4 1292 "?()"
V L "x" 4 1292 "?"
C L "tan" 4 3 3 "FUNCTION"
F G "tan" 4 1304 "float()"
V L "x" 4 1304 "float"
V L "c" 4 1306 "float"
V L "s" 4 1306 "float"
C L "tan" 4 3 2 "FUNCTION"
F G "tan" 4 1318 "?()"
V L "x" 4 1318 "?"
V L "c" 4 1320 "?"
V L "s" 4 1320 "?"
C L "tan" 4 3 1 "FUNCTION"
F G "tan" 4 1331 "?()"
V L "x" 4 1331 "?"
V L "c" 4 1333 "?"
V L "s" 4 1333 "?"
V G "pas" 4 1344 "float[3]"
V G "qas" 4 1345 "float[3]"
F G "ASIN_COS" 4 1347 "float()"
V L "x" 4 1347 "float"
V L "n" 4 1347 "int8"
V L "y" 4 1349 "float"
V L "res" 4 1349 "float"
V L "r" 4 1349 "float"
V L "y2" 4 1349 "float"
V L "s" 4 1350 "int1"
C L "ASIN_COS" 4 3 1 "FUNCTION"
C L "ASIN_COS" 4 3 1 "FUNCTION"
C L "ASIN_COS" 4 3 2 "FUNCTION"
F G "ASIN_COS" 4 1395 "?()"
V L "x" 4 1395 "?"
V L "n" 4 1395 "int8"
V L "y" 4 1397 "?"
V L "res" 4 1397 "?"
V L "r" 4 1397 "?"
V L "y2" 4 1397 "?"
V L "s" 4 1398 "int1"
C L "ASIN_COS" 4 3 1 "FUNCTION"
C L "ASIN_COS" 4 3 1 "FUNCTION"
C L "ASIN_COS" 4 3 1 "FUNCTION"
F G "ASIN_COS" 4 1441 "?()"
V L "x" 4 1441 "?"
V L "n" 4 1441 "int8"
V L "y" 4 1443 "?"
V L "res" 4 1443 "?"
V L "r" 4 1443 "?"
V L "y2" 4 1443 "?"
V L "s" 4 1444 "int1"
C L "ASIN_COS" 4 3 1 "FUNCTION"
C L "ASIN_COS" 4 3 1 "FUNCTION"
C L "asin" 4 3 3 "FUNCTION"
F G "asin" 4 1493 "float()"
V L "x" 4 1493 "float"
V L "r" 4 1495 "float"
C L "asin" 4 3 2 "FUNCTION"
F G "asin" 4 1503 "?()"
V L "x" 4 1503 "?"
V L "r" 4 1505 "?"
C L "asin" 4 3 1 "FUNCTION"
F G "asin" 4 1512 "?()"
V L "x" 4 1512 "?"
V L "r" 4 1514 "?"
C L "acos" 4 3 3 "FUNCTION"
F G "acos" 4 1527 "float()"
V L "x" 4 1527 "float"
V L "r" 4 1529 "float"
C L "acos" 4 3 2 "FUNCTION"
F G "acos" 4 1537 "?()"
V L "x" 4 1537 "?"
V L "r" 4 1539 "?"
C L "acos" 4 3 1 "FUNCTION"
F G "acos" 4 1546 "?()"
V L "x" 4 1546 "?"
V L "r" 4 1548 "?"
V G "pat" 4 1555 "float[4]"
V G "qat" 4 1556 "float[4]"
C L "atan" 4 3 3 "FUNCTION"
F G "atan" 4 1564 "float()"
V L "x" 4 1564 "float"
V L "y" 4 1566 "float"
V L "res" 4 1566 "float"
V L "r" 4 1566 "float"
V L "s" 4 1567 "int1"
V L "flag" 4 1567 "int1"
C L "atan" 4 3 1 "FUNCTION"
C L "atan" 4 3 2 "FUNCTION"
F G "atan" 4 1606 "?()"
V L "x" 4 1606 "?"
V L "y" 4 1608 "?"
V L "res" 4 1608 "?"
V L "r" 4 1608 "?"
V L "s" 4 1609 "int1"
V L "flag" 4 1609 "int1"
C L "atan" 4 3 1 "FUNCTION"
C L "atan" 4 3 1 "FUNCTION"
F G "atan" 4 1647 "?()"
V L "x" 4 1647 "?"
V L "y" 4 1649 "?"
V L "res" 4 1649 "?"
V L "r" 4 1649 "?"
V L "s" 4 1650 "int1"
V L "flag" 4 1650 "int1"
C L "atan" 4 3 1 "FUNCTION"
C L "atan2" 4 3 5 "FUNCTION"
F G "atan2" 4 1697 "float()"
V L "y" 4 1697 "float"
V L "x" 4 1697 "float"
V L "z" 4 1699 "float"
V L "sign" 4 1700 "int1"
V L "quad" 4 1701 "int8"
C L "atan2" 4 3 1 "FUNCTION"
C L "atan2" 4 3 1 "FUNCTION"
C L "atan2" 4 3 2 "FUNCTION"
F G "atan2" 4 1769 "?()"
V L "y" 4 1769 "?"
V L "x" 4 1769 "?"
V L "z" 4 1771 "?"
V L "sign" 4 1772 "int1"
V L "quad" 4 1773 "int8"
C L "atan2" 4 3 1 "FUNCTION"
C L "atan2" 4 3 1 "FUNCTION"
C L "atan2" 4 3 1 "FUNCTION"
F G "atan2" 4 1839 "?()"
V L "y" 4 1839 "?"
V L "x" 4 1839 "?"
V L "z" 4 1841 "?"
V L "sign" 4 1842 "int1"
V L "quad" 4 1843 "int8"
C L "atan2" 4 3 1 "FUNCTION"
C L "atan2" 4 3 1 "FUNCTION"
C L "cosh" 4 3 5 "FUNCTION"
F G "cosh" 4 1919 "float()"
V L "x" 4 1919 "float"
C L "cosh" 4 3 2 "FUNCTION"
F G "cosh" 4 1926 "?()"
V L "x" 4 1926 "?"
C L "cosh" 4 3 1 "FUNCTION"
F G "cosh" 4 1932 "?()"
V L "x" 4 1932 "?"
C L "sinh" 4 3 4 "FUNCTION"
F G "sinh" 4 1946 "float()"
V L "x" 4 1946 "float"
C L "sinh" 4 3 2 "FUNCTION"
F G "sinh" 4 1954 "?()"
V L "x" 4 1954 "?"
C L "sinh" 4 3 1 "FUNCTION"
F G "sinh" 4 1961 "?()"
V L "x" 4 1961 "?"
C L "tanh" 4 3 4 "FUNCTION"
F G "tanh" 4 1976 "float()"
V L "x" 4 1976 "float"
C L "tanh" 4 3 2 "FUNCTION"
F G "tanh" 4 1983 "?()"
V L "x" 4 1983 "?"
C L "tanh" 4 3 1 "FUNCTION"
F G "tanh" 4 1989 "?()"
V L "x" 4 1989 "?"
D G "LOG2" 4 2006 ".30102999566398119521"
F G "frexp" 4 2007 "float()"
V L "x" 4 2007 "float"
V L "exp" 4 2007 "*sint8"
V L "res" 4 2009 "float"
V L "sign" 4 2010 "int1"
C L "frexp" 4 3 2 "FUNCTION"
F G "frexp" 4 2054 "?()"
V L "x" 4 2054 "?"
V L "exp" 4 2054 "*sint8"
V L "res" 4 2056 "?"
V L "sign" 4 2057 "int1"
C L "frexp" 4 3 1 "FUNCTION"
F G "frexp" 4 2099 "?()"
V L "x" 4 2099 "?"
V L "exp" 4 2099 "*sint8"
V L "res" 4 2101 "?"
V L "sign" 4 2102 "int1"
C L "ldexp" 4 3 4 "FUNCTION"
F G "ldexp" 4 2152 "float()"
V L "value" 4 2152 "float"
V L "exp" 4 2152 "sint8"
C L "ldexp" 4 3 2 "FUNCTION"
F G "ldexp" 4 2160 "?()"
V L "value" 4 2160 "?"
V L "exp" 4 2160 "sint8"
C L "ldexp" 4 3 1 "FUNCTION"
F G "ldexp" 4 2165 "?()"
V L "value" 4 2165 "?"
V L "exp" 4 2165 "sint8"
D G "__UART__" 5 2 ""
D G "ALARM_DATA_ID" 5 4 "0x03"
F G "transmitTLV" 5 6 "void()"
V L "arrayToSend" 5 6 "*sint8"
V L "length" 5 6 "sint8"
F G "transmitTLV" 5 7 "void()"
V L "arrayToSend" 5 7 "*sint8"
V L "length" 5 7 "sint8"
V L "tlvID" 5 7 "sint8"
F G "TransmitDataStreaming" 5 8 "void()"
D G "__IIC__" 6 2 ""
D G "SDA_PIN" 6 8 "SDA"
D G "SCL_PIN" 6 9 "SCL"
C L "TransmitDataStreaming" 6 11 1 "FUNCTION"
F G "i2c_in_byte" 6 12 "sint8()"
F G "i2c_out_byte" 6 13 "void()"
V L "o_byte" 6 13 "sint8"
F G "i2c_nack" 6 14 "void()"
F G "i2c_ack" 6 15 "void()"
F G "i2c_start" 6 16 "void()"
F G "i2c_stop" 6 17 "void()"
F G "i2c_high_sda" 6 18 "void()"
F G "i2c_low_sda" 6 19 "void()"
F G "i2c_high_scl" 6 20 "void()"
F G "i2c_low_scl" 6 21 "void()" "#ifndef __EEPROM__"
C L "i2c_low_scl" 7 2 2 "FUNCTION"
C L "i2c_low_scl" 7 5 1 "*"
C L "i2c_low_scl" 7 6 1 "*"
C L "i2c_low_scl" 7 8 1 "*"
C L "i2c_low_scl" 7 9 1 "*"
D G "__MENU__" 8 2 ""
T G "*funPtr" 8 4 "void()"
D G "_STDLIB" 9 12 ""
D G "RAND_MAX" 9 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 9 25 "1"
T G "div_t" 9 33 "{sint16 quot,sint16 rem}"
T G "ldiv_t" 9 38 "{sint32 quot,sint32 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 10 13 ""
D G "ptrdiff_t" 10 18 "unsigned int16"
D G "size_t" 10 21 "unsigned int8"
D G "wchar_t" 10 22 "char"
D G "NULL" 10 23 "0"
D G "offsetof" 10 25 "(s,f) (offsetofbit(s,f)/8)"
C L "*funPtr" 9 43 2 "FUNCTION"
C L "*funPtr" 9 46 1 "*"
C L "*funPtr" 9 46 1 "*"
F G "atoi" 9 50 "sint16()"
V L "s" 9 50 "*int8" "Syntax: signed int32  atoi32(char * s)"
D G "atoi32" 9 56 "(s) atol(s)"
C L "atoi" 9 46 5 "FUNCTION"
F G "atoi48" 9 68 "?()"
V L "s" 9 68 "*int8" "Syntax: signed int64  atoi64(char * s)"
C L "atoi48" 9 46 2 "FUNCTION"
F G "atoi64" 9 73 "?()"
V L "s" 9 73 "*int8" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi64" 9 46 2 "FUNCTION"
F G "itoa" 9 79 "*int8()"
V L "num" 9 79 "sint32"
V L "base" 9 79 "int16"
V L "s" 9 79 "*int8" "Standard template: signed int16  atol(char * s)"
C L "itoa" 9 81 1 "*"
C L "itoa" 9 81 1 "*"
F G "atol" 9 85 "sint32()"
V L "s" 9 85 "*int8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
F G "strtol" 9 93 "sint32()"
V L "s" 9 93 "*int8"
V L "endptr" 9 93 "*int8"
V L "base" 9 93 "sint16" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
F G "strtoul" 9 101 "int32()"
V L "s" 9 101 "*int8"
V L "endptr" 9 101 "*int8"
V L "base" 9 101 "sint16" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 9 95 2 "FUNCTION"
C L "strtoul" 9 103 1 "*"
C L "strtoul" 9 103 1 "*"
C L "strtoul" 9 103 1 "*"
F G "strtof" 9 110 "float()"
V L "s" 9 110 "*int8"
V L "endptr" 9 110 "*int8"
F G "strtof48" 9 112 "?()"
V L "s" 9 112 "*int8"
V L "endptr" 9 112 "*int8"
F G "strtod" 9 113 "?()"
V L "s" 9 113 "*int8"
V L "endptr" 9 113 "*int8" "Standard template: float32 atof(char * s)"
C L "strtod" 9 120 1 "*"
D G "atof" 9 124 "(s)   strtof(s, 0)"
C L "strtod" 9 120 3 "FUNCTION"
C L "strtod" 9 130 1 "*"
D G "atof48" 9 134 "(s) strtof48(s, 0)"
C L "strtod" 9 130 1 "FUNCTION"
C L "strtod" 9 136 1 "*"
D G "atof64" 9 140 "(s) strtod(s, 0)"
C L "strtod" 9 136 1 "FUNCTION"
C L "strtod" 9 143 1 "*"
C L "strtod" 9 143 1 "*"
C L "strtod" 9 143 1 "*"
F G "atoe" 9 153 "float()"
V L "s" 9 153 "*int8" "Pseudo-random sequence generation functions"
C L "atoe" 9 143 1 "FUNCTION"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
F G "rand" 9 169 "int16()"
C L "rand" 9 160 1 "FUNCTION"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
F G "srand" 9 191 "void()"
V L "seed" 9 191 "int32" "Memory management functions"
C L "srand" 9 171 3 "FUNCTION"
F G "system" 9 205 "sint8()"
V L "string" 9 205 "*int8" "Searching and sorting utilities"
C L "system" 9 171 1 "FUNCTION"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 4 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
D G "labs" 9 249 "abs"
F G "div" 9 251 "div_t()"
V L "numer" 9 251 "sint16"
V L "denom" 9 251 "sint16"
F G "ldiv" 9 252 "ldiv_t()"
V L "numer" 9 252 "sint32"
V L "denom" 9 252 "sint32" "Multibyte character functions"
C L "ldiv" 9 229 4 "FUNCTION"
C L "ldiv" 10 2 7 "FUNCTION"
D G "_STRING" 11 12 ""
C L "ldiv" 10 2 7 "FUNCTION"
D G "_CTYPE" 12 12 ""
D G "islower" 12 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 12 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 12 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 12 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 12 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 12 19 "(x)  ((x)==' ')"
D G "isxdigit" 12 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 12 21 "(x)  ((x)<' ')"
D G "isprint" 12 22 "(x)  ((x)>=' ')"
D G "isgraph" 12 23 "(x)  ((x)>' ')"
D G "ispunct" 12 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 11 19 10 "FUNCTION"
F G "memmove" 11 34 "*int8()"
V L "s1" 11 34 "*int8"
V L "s2" 11 34 "*int8"
V L "n" 11 34 "int8"
V L "sc1" 11 36 "*int8"
V L "sc2" 11 37 "*int8"
D G "strcopy" 11 54 "strcpy"
C L "strncpy" 11 19 4 "FUNCTION"
F G "strncpy" 11 61 "*int8()"
V L "s1" 11 61 "*int8"
V L "s2" 11 61 "*int8"
V L "n" 11 61 "int8"
V L "s" 11 63 "*int8"
C L "strcat" 11 19 3 "FUNCTION"
F G "strcat" 11 78 "*int8()"
V L "s1" 11 78 "*int8"
V L "s2" 11 78 "*int8"
V L "s" 11 80 "*int8"
C L "strncat" 11 19 2 "FUNCTION"
F G "strncat" 11 96 "*int8()"
V L "s1" 11 96 "*int8"
V L "s2" 11 96 "*int8"
V L "n" 11 96 "int8"
V L "s" 11 98 "*int8"
C L "memcmp" 11 19 3 "FUNCTION"
F G "memcmp" 11 120 "sint8()"
V L "s1" 11 120 "*int8"
V L "s2" 11 120 "*int8"
V L "n" 11 120 "int8"
V L "su1" 11 122 "*int8"
V L "su2" 11 122 "*int8"
C L "strcmp" 11 19 2 "FUNCTION"
F G "strcmp" 11 134 "sint8()"
V L "s1" 11 134 "*int8"
V L "s2" 11 134 "*int8"
C L "strcoll" 11 19 2 "FUNCTION"
F G "strcoll" 11 144 "sint8()"
V L "s1" 11 144 "*int8"
V L "s2" 11 144 "*int8"
C L "strncmp" 11 19 4 "FUNCTION"
F G "strncmp" 11 157 "sint8()"
V L "s1" 11 157 "*int8"
V L "s2" 11 157 "*int8"
V L "n" 11 157 "int8"
C L "strxfrm" 11 19 3 "FUNCTION"
F G "strxfrm" 11 169 "int8()"
V L "s1" 11 169 "*int8"
V L "s2" 11 169 "*int8"
V L "n" 11 169 "int8"
V L "s" 11 171 "*int8"
V L "n1" 11 172 "int8"
C L "memchr" 11 19 3 "FUNCTION"
F G "memchr" 11 191 "*int8()"
V L "s" 11 191 "*int8"
V L "c" 11 191 "int8"
V L "n" 11 191 "int8"
V L "uc" 11 193 "int8"
V L "su" 11 194 "*int8"
C L "strchr" 11 19 2 "FUNCTION"
F G "strchr" 11 205 "*int8()"
V L "s" 11 205 "*int8"
V L "c" 11 205 "int8"
C L "strcspn" 11 19 4 "FUNCTION"
F G "strcspn" 11 217 "int8()"
V L "s1" 11 217 "*int8"
V L "s2" 11 217 "*int8"
V L "sc1" 11 219 "*int8"
V L "sc2" 11 219 "*int8"
C L "strpbrk" 11 19 4 "FUNCTION"
F G "strpbrk" 11 232 "*int8()"
V L "s1" 11 232 "*int8"
V L "s2" 11 232 "*int8"
V L "sc1" 11 234 "*int8"
V L "sc2" 11 234 "*int8"
C L "strrchr" 11 19 2 "FUNCTION"
F G "strrchr" 11 247 "*int8()"
V L "s" 11 247 "*int8"
V L "c" 11 247 "int8"
V L "p" 11 249 "*int8"
C L "strspn" 11 19 2 "FUNCTION"
F G "strspn" 11 262 "int8()"
V L "s1" 11 262 "*int8"
V L "s2" 11 262 "*int8"
V L "sc1" 11 264 "*int8"
V L "sc2" 11 264 "*int8"
C L "strstr" 11 19 6 "FUNCTION"
F G "strstr" 11 281 "*int8()"
V L "s1" 11 281 "*int8"
V L "s2" 11 281 "*int8"
V L "s" 11 283 "*int8"
V L "t" 11 283 "*int8"
C L "strtok" 11 19 13 "FUNCTION"
F G "strtok" 11 320 "*int8()"
V L "s1" 11 320 "*int8"
V L "s2" 11 320 "*int8"
V L "beg" 11 322 "*int8"
V L "end" 11 322 "*int8"
V L "save" 11 323 "*int8"
C L "strlen" 11 19 6 "FUNCTION"
F G "strlen" 11 369 "int8()"
V L "s" 11 369 "*int8"
V L "sc" 11 371 "*int8"
C L "stricmp" 11 19 2 "FUNCTION"
F G "stricmp" 11 380 "sint8()"
V L "s1" 11 380 "*int8"
V L "s2" 11 380 "*int8"
C L "strlwr" 11 19 3 "FUNCTION"
F G "strlwr" 11 394 "*int8()"
V L "s" 11 394 "*int8"
V L "p" 11 396 "*int8"
F G "div" 9 274 "div_t()"
V L "numer" 9 274 "sint16"
V L "denom" 9 274 "sint16"
V L "Val" 9 276 "div_t"
F G "ldiv" 9 282 "ldiv_t(sint16 denom)"
V L "numer" 9 282 "sint32"
V L "denom" 9 282 "sint32"
V L "Val" 9 284 "ldiv_t"
F G "atoe" 9 292 "float()"
V L "s" 9 292 "*int8"
V L "pow10" 9 294 "float"
V L "result" 9 295 "float"
V L "sign" 9 296 "int8"
V L "expsign" 9 297 "int8"
V L "c" 9 298 "int8"
V L "ptr" 9 299 "int8"
V L "i" 9 300 "int8"
V L "exp" 9 301 "float"
V L "expcnt" 9 302 "int8"
C L "atoe" 9 328 1 "FUNCTION"
F G "atoi" 9 429 "sint16()"
V L "s" 9 429 "*int8"
V L "result" 9 431 "sint16"
V L "sign" 9 432 "int16"
V L "base" 9 432 "int16"
V L "index" 9 432 "int16"
V L "c" 9 433 "int8"
C L "atoi" 9 328 1 "FUNCTION"
C L "atoi" 9 328 1 "FUNCTION"
C L "atoi" 9 328 1 "FUNCTION"
C L "atoi" 9 328 1 "FUNCTION"
C L "atoi" 9 328 1 "FUNCTION"
C L "atoi" 9 328 1 "FUNCTION"
F G "atol" 9 498 "sint32()"
V L "s" 9 498 "*int8"
V L "result" 9 500 "sint32"
V L "sign" 9 501 "int16"
V L "base" 9 501 "int16"
V L "index" 9 501 "int16"
V L "c" 9 502 "int8"
C L "atol" 9 328 1 "FUNCTION"
C L "atol" 9 328 1 "FUNCTION"
C L "atol" 9 328 1 "FUNCTION"
C L "atol" 9 328 1 "FUNCTION"
C L "mult_with10" 9 328 1 "FUNCTION"
F G "mult_with10" 9 565 "sint32()"
V L "num" 9 565 "sint32"
F G "atoi48" 9 639 "?()"
V L "s" 9 639 "*int8"
V L "result" 9 641 "?"
V L "sign" 9 642 "sint8"
V L "base" 9 642 "sint8"
V L "index" 9 642 "sint8"
V L "c" 9 643 "int8"
C L "atoi48" 9 328 1 "FUNCTION"
C L "atoi48" 9 328 1 "FUNCTION"
C L "atoi48" 9 328 1 "FUNCTION"
C L "atoi48" 9 328 1 "FUNCTION"
C L "atoi48" 9 328 1 "FUNCTION"
F G "atoi64" 9 704 "?()"
V L "s" 9 704 "*int8"
V L "result" 9 706 "?"
V L "sign" 9 707 "sint8"
V L "base" 9 707 "sint8"
V L "index" 9 707 "sint8"
V L "c" 9 708 "int8"
C L "atoi64" 9 328 1 "FUNCTION"
C L "atoi64" 9 328 1 "FUNCTION"
C L "atoi64" 9 328 1 "FUNCTION"
C L "atoi64" 9 328 1 "FUNCTION"
C L "atoi64" 9 328 1 "FUNCTION"
F G "itoa" 9 770 "*int8()"
V L "num" 9 770 "sint32"
V L "base" 9 770 "int16"
V L "s" 9 770 "*int8"
V L "temp" 9 772 "int32"
V L "i" 9 773 "int8"
V L "sign" 9 773 "int8"
V L "cnt" 9 773 "int8"
V L "c" 9 774 "int8"
C L "itoa" 9 328 1 "FUNCTION"
C L "itoa" 9 328 1 "FUNCTION"
C L "itoa" 9 328 1 "FUNCTION"
C L "itoa" 9 328 1 "FUNCTION"
C L "itoa" 9 328 1 "FUNCTION"
F G "strtof" 9 807 "float()"
V L "s" 9 807 "*int8"
V L "endptr" 9 807 "*int8"
V L "pow10" 9 809 "float"
V L "result" 9 810 "float"
V L "skip" 9 811 "int1"
V L "sign" 9 811 "int1"
V L "point" 9 811 "int1"
V L "c" 9 812 "int8"
V L "ptr" 9 813 "int8"
F G "strtof48" 9 880 "?()"
V L "s" 9 880 "*int8"
V L "endptr" 9 880 "*int8"
V L "pow10" 9 882 "?"
V L "result" 9 883 "?"
V L "skip" 9 884 "int1"
V L "sign" 9 884 "int1"
V L "point" 9 884 "int1"
V L "c" 9 885 "int8"
V L "ptr" 9 886 "int8"
F G "strtod" 9 952 "?()"
V L "s" 9 952 "*int8"
V L "endptr" 9 952 "*int8"
V L "pow10" 9 954 "?"
V L "result" 9 955 "?"
V L "skip" 9 956 "int1"
V L "sign" 9 956 "int1"
V L "point" 9 956 "int1"
V L "c" 9 957 "int8"
V L "ptr" 9 958 "int8"
F G "strtoul" 9 1025 "int32()"
V L "s" 9 1025 "*int8"
V L "endptr" 9 1025 "*int8"
V L "base" 9 1025 "sint16"
V L "sc" 9 1027 "*int8"
V L "s1" 9 1027 "*int8"
V L "sd" 9 1027 "*int8"
V L "x" 9 1028 "int32"
V L "sign" 9 1029 "int8"
V L "digits" 9 1030 "int8[1]"
C L "strtoul" 9 328 1 "FUNCTION"
C L "strtoul" 9 328 1 "FUNCTION"
C L "strtoul" 9 328 1 "FUNCTION"
F G "strtol" 9 1087 "sint32()"
V L "s" 9 1087 "*int8"
V L "endptr" 9 1087 "*int8"
V L "base" 9 1087 "sint16"
V L "sc" 9 1089 "*int8"
V L "s1" 9 1089 "*int8"
V L "sd" 9 1089 "*int8"
V L "x" 9 1090 "sint32"
V L "sign" 9 1091 "int8"
V L "digits" 9 1092 "int8[1]"
C L "strtol" 9 328 1 "FUNCTION"
C L "strtol" 9 328 1 "FUNCTION"
C L "strtol" 9 328 1 "FUNCTION"
F G "system" 9 1150 "sint8()"
V L "string" 9 1150 "*int8"
F G "mblen" 9 1155 "sint8(*int8 string)"
V L "s" 9 1155 "*int8"
V L "n" 9 1155 "int8"
F G "mbtowc" 9 1160 "sint8()"
V L "pwc" 9 1160 "*int8"
V L "s" 9 1160 "*int8"
V L "n" 9 1160 "int8"
F G "wctomb" 9 1166 "sint8()"
V L "s" 9 1166 "*int8"
V L "wchar" 9 1166 "int8"
F G "mbstowcs" 9 1172 "int8()"
V L "pwcs" 9 1172 "*int8"
V L "s" 9 1172 "*int8"
V L "n" 9 1172 "int8"
F G "wcstombs" 9 1178 "int8()"
V L "s" 9 1178 "*int8"
V L "pwcs" 9 1178 "*int8"
V L "n" 9 1178 "int8"
V G "_Randseed" 9 1188 "int32"
F G "rand" 9 1190 "int16()"
F G "srand" 9 1196 "void()"
V L "seed" 9 1196 "int32"
T G "*_Cmpfun" 9 1208 "sint16(int32 seed)"
V L "p1" 9 1208 "*int8"
V L "p2" 9 1208 "*int8"
F G "qsort" 9 1213 "void()"
V L "qdata" 9 1213 "*int8"
V L "qitems" 9 1213 "int16"
V L "qsize" 9 1213 "int16"
V L "cmp" 9 1213 "_Cmpfun"
V L "m" 9 1214 "int16"
V L "j" 9 1214 "int16"
V L "i" 9 1214 "int16"
V L "l" 9 1214 "int16"
V L "done" 9 1215 "int1"
V L "t" 9 1216 "int8[16]"
F G "bsearch" 9 1241 "*int8()"
V L "key" 9 1241 "*int8"
V L "base" 9 1241 "*int8"
V L "num" 9 1241 "int8"
V L "width" 9 1241 "int8"
V L "cmp" 9 1241 "_Cmpfun"
V L "p" 9 1243 "*int8"
V L "q" 9 1243 "*int8"
V L "n" 9 1244 "int8"
V L "pivot" 9 1245 "int8"
V L "Val" 9 1246 "sint16"
C L "bsearch" 9 328 1 "FUNCTION"
D G "UP" 8 9 "1"
D G "DOWN" 8 10 "0"
D G "EDIT_DATE_TIME_PH_COUNT" 8 15 "7"
D G "EDIT_ALARM_OPTIONS_PH_LOCATION" 8 16 "9"
D G "EDIT_CARILLON_PH_LOCATION" 8 17 "2"
D G "EDIT_ALARM_TIME_PH_LOCATION" 8 18 "6"
D G "EDIT_ALARM_DAYS_PH_LOCATION" 8 19 "8"
D G "EDIT_ALARM_SNOOZE_PH_LOCATION" 8 20 "2"
D G "EDIT_LOAD_LIGHT_PH_LOCATION" 8 21 "3"
D G "EDIT_RGB_LIGHT_PH_LOCATION" 8 22 "5"
D G "EDIT_VOLUME_PH_LOCATION" 8 23 "3"
D G "EDIT_LOAD_DISPLAY_PH_LOCATION" 8 24 "3"
V G "EDIT_DATE_TIME_PH_LOCATION" 8 27 "sint8[1]"
V G "EDIT_ALARM_OPTIONS_LOCATION" 8 28 "sint8[1]"
V G "EDIT_CARILLON_LOCATION" 8 29 "sint8[1]"
V G "EDIT_ALARM_TIME_LOCATION" 8 30 "sint8[1]"
V G "EDIT_ALARM_DAYS_LOCATION" 8 31 "sint8[1]"
V G "EDIT_ALARM_SNOOZE_LOCATION" 8 32 "sint8[1]"
V G "EDIT_LOAD_LIGHT_LOCATION" 8 33 "sint8[1]"
V G "EDIT_RGB_LIGHT_LOCATION" 8 34 "sint8[1]"
V G "EDIT_VOLUME_LOCATION" 8 35 "sint8[1]"
V G "EDIT_LOAD_DISPLAY_LOCATION" 8 36 "sint8[1]"
F G "editField" 8 38 "void()"
V L "field" 8 38 "*int8"
V L "minimum" 8 38 "int8"
V L "maximum" 8 38 "int8"
V L "displayFunction" 8 38 "funPtr"
F G "editIntField" 8 39 "void()"
V L "field" 8 39 "*sint16"
V L "minimum" 8 39 "sint16"
V L "maximum" 8 39 "sint16"
V L "displayFunction" 8 39 "funPtr"
F G "displayEditDateAndTime" 8 41 "void()"
F G "displayEditAlarmOptions" 8 43 "void()"
F G "displayCarillon" 8 45 "void()"
F G "displayEditAlarmTime" 8 47 "void()"
F G "displayAlarmDays" 8 49 "void()"
F G "displaySnooze" 8 51 "void()"
F G "displayLoadLighting" 8 53 "void()"
F G "displayRGBLight" 8 55 "void()"
F G "displayVolume" 8 57 "void()"
F G "displayPowerCtrls" 8 59 "void()"
D G "BUZZER_ON_TIME" 8 61 "50"
D G "WAIT_FOR_DEBOUNCE" 8 62 "100"
F G "EditDateAndTime" 8 64 "void()"
F G "EditAlarmTime" 8 66 "void()"
F G "EditCarillon" 8 68 "void()"
F G "EditLoadLighting" 8 70 "void()"
F G "EditRGBLighting" 8 72 "void()"
F G "EditVolume" 8 74 "void()"
F G "EditBattery" 8 76 "void()"
F G "EditAlarmDays" 8 78 "void()"
F G "EditAlarmSnooze" 8 80 "void()"
F G "EditPowerCtrls" 8 82 "void()"
V G "insideMenu" 8 84 "int1"
D G "__RGBLIGHTING__" 13 2 ""
C L "EditPowerCtrls" 13 3 1 "*"
C L "EditPowerCtrls" 13 3 1 "*"
C L "EditPowerCtrls" 13 3 1 "*"
C L "EditPowerCtrls" 13 3 1 "*"
T G "RGB" 13 18 "{int8 red,int8 green,int8 blue,int8 cntr}"
T G "HSV" 13 25 "{sint16 hue,int8 saturation,int8 value}"
F G "RGBtoHSV" 13 27 "void()"
V L "RGB" 13 27 "*RGB"
V L "HSV" 13 28 "*HSV"
F G "HSVtoRGB" 13 30 "void()"
V L "HSV" 13 30 "*HSV"
V L "RGB" 13 31 "*RGB"
F G "UpdateRGB_Out" 13 33 "void()"
V L "RGB" 13 33 "*RGB"
F G "IncreaseHue" 13 35 "void()"
V L "HSV" 13 35 "*HSV" "int8 red = 0;"
C L "IncreaseHue" 13 3 5 "FUNCTION"
V G "rgbColor" 13 46 "RGB"
V G "hsvColor" 13 47 "HSV"
V G "moodEnable" 13 49 "int1"
F G "initRGBLighting" 13 51 "void()"
F G "ledExample" 13 52 "void()" "void refreshRGB();"
D G "CFG_RED" 13 55 "1"
D G "CFG_BLUE" 13 56 "2"
D G "CFG_GREEN" 13 57 "3"
V G "dimmer0" 13 59 "sint8"
V G "dimmer1" 13 60 "sint8"
V G "dimmerCtrl" 13 61 "sint8"
D G "CFG_RED_OFF" 13 64 "0x00"
D G "CFG_RED_ON" 13 65 "0x01"
D G "CFG_RED_PW0" 13 66 "0x02"
D G "CFG_RED_PW1" 13 67 "0x03"
D G "CFG_GRN_OFF" 13 69 "0x00"
D G "CFG_GRN_ON" 13 70 "0x04"
D G "CFG_GRN_PW0" 13 71 "0x08"
D G "CFG_GRN_PW1" 13 72 "0x0C"
D G "CFG_BLU_OFF" 13 74 "0x00"
D G "CFG_BLU_ON" 13 75 "0x10"
D G "CFG_BLU_PW0" 13 76 "0x20"
D G "CFG_BLU_PW1" 13 77 "0x30"
D G "I2C_MAX_TRIAL" 13 79 "5u"
C L "ledExample" 13 3 1 "FUNCTION"
D G "T5CON_INIT" 13 92 "0x8000"
D G "PR5_INIT" 13 93 "0x0793"
D G "__CHIME__" 14 2 ""
C L "ledExample" 14 4 1 "FUNCTION"
C L "ledExample" 14 4 1 "FUNCTION"
D G "INITIAL_T3CON" 14 32 "0x8030"
D G "TMR3_BASE" 14 33 " (0x87C6 / 8)		" "300 ms * 118.6622 MHz / 4 / 256"
D G "CHIMESIZE" 14 35 "14"
D G "TONE_COUNT" 14 37 "1"
D G "MIN_VOLUME" 14 38 "1"
D G "MAX_VOLUME" 14 39 "100"
V G "ChimePattern" 14 41 "int1[1]"
V G "chimeState" 14 42 "sint8"
V G "carillon" 14 43 "int1"
V G "chimeVolume" 14 44 "sint8"
V G "toneSelect" 14 45 "sint8"
V G "chimeOn" 14 46 "int1"
D G "CHIME_FREQ_PERIOD" 14 48 "0x3894"
D G "CHIME_DUTY" 14 49 "50"
D G "CHIME_ON_TIME" 14 50 " (CHIME_FREQ_PERIOD * CHIME_DUTY / 100)"
C L "ledExample" 14 4 1 "FUNCTION"
F G "initChime" 14 54 "void()"
D G "__LCDDRIVER__" 15 2 ""
F G "initLCD" 15 4 "void()"
F G "shutdownLCD" 15 5 "void()"
F G "writeByte" 15 6 "void()"
V L "b" 15 6 "int8"
F G "writeToLCD" 15 7 "void()"
V L "MSB" 15 7 "int8"
V L "LSB" 15 7 "int8"
F G "writeToDDRAM" 15 8 "void()"
V L "arrayPtr" 15 8 "*int8"
V L "arraySize" 15 8 "int8"
F G "setLCDLine" 15 9 "void()"
V L "lineNo" 15 9 "sint16"
V L "lineData" 15 9 "*int8"
V L "lineSize" 15 9 "sint16"
F G "clearLCDLines" 15 10 "void()"
D G "LCD_WRITE_CFG" 15 12 "0xF8"
D G "LCD_WRITE_MEM" 15 13 "0xFA"
D G "LCD_CLEAR" 15 14 "0x01"
D G "LCD_CSR_HM" 15 15 "0x02"
D G "LCD_EMS_DFLT" 15 16 "0x06"
D G "LCD_DSPL_DFLT" 15 18 "0x0F"
D G "LCD_DSPL_BOFF" 15 19 "0x0C"
D G "LCD_DSPL_OFF" 15 20 "0x08"
D G "LCD_CSR_LEFT" 15 22 "0x10"
D G "LCD_CSR_RIGHT" 15 23 "0x14"
D G "LCD_ADDR_SET" 15 24 "0x80"
D G "LCD_FCT_DFT" 15 26 "0x28"
D G "LCD_FCT_100" 15 27 "0x00"
D G "LCD_FCT_75" 15 28 "0x01"
D G "LCD_FCT_50" 15 29 "0x02"
D G "LCD_FCT_25" 15 30 "0x03"
D G "LCD_TIME_MULT" 15 33 "40"
D G "STB_L_HOLDTIME" 15 35 "4*LCD_TIME_MULT" "04 cycles == 140 ns"
D G "STB_H_HOLDTIME" 15 36 "15*LCD_TIME_MULT" "15 cycles == 525 ns"
D G "SCK_L_HOLDTIME" 15 37 "8*LCD_TIME_MULT" "08 cycles == 280 ns"
D G "SCK_H_HOLDTIME" 15 38 "8*LCD_TIME_MULT" "08 cycles == 280 ns"
D G "LINE1" 15 40 "0"
D G "LINE2" 15 41 "1"
D G "LCD_LINE_SIZE" 15 44 "16"
V G "LCD_Line1" 15 45 "int8[16]"
V G "LCD_Line2" 15 46 "int8[16]"
V G "enableLCD" 15 47 "int1"
D G "LUM_LCD_OFF_THRESHOLD_LOW" 15 49 "1024"
D G "LUM_LCD_OFF_THRESHOLD_HIGH" 15 50 "2048"
D G "__LOADCONTROL__" 16 2 ""
C L "clearLCDLines" 16 9 1 "FUNCTION"
C L "clearLCDLines" 16 9 1 "FUNCTION"
D G "T4CON_INIT" 16 32 "0x8010"
D G "LS_OFF" 16 37 "0"
D G "LS_OFF_WAIT_TURN_ON" 16 38 "1"
D G "LS_ON" 16 39 "2"
D G "LS_OFF_WAIT_ZERO_X" 16 40 "3"
D G "LS_MAX_DELAY" 16 42 "25000"
F G "InitLoadControl" 16 44 "void()"
F G "monitorSync" 16 45 "void()"
F G "getTMRLoadValue" 16 46 "sint16()"
V L "grade" 16 46 "sint16"
F G "TurnTriacOn" 16 47 "void()"
F G "TurnTriacOff" 16 48 "void()"
F G "TurnLoadCtrlLow" 16 49 "void()"
F G "TurnLoadCtrlHigh" 16 50 "void()"
F G "CalculateLuminosity" 16 51 "void()"
F G "SetLampIntensity" 16 52 "void()"
V L "intensity" 16 52 "float"
V G "maxLoadLighting" 16 54 "sint8"
V G "delayLoadLighting" 16 55 "sint8"
C L "SetLampIntensity" 16 9 1 "FUNCTION"
C L "SetLampIntensity" 16 9 1 "FUNCTION"
C L "SetLampIntensity" 16 9 5 "FUNCTION"
C L "SetLampIntensity" 16 9 1 "FUNCTION"
T G "load_struct" 16 67 "{int16 PhaseOffset,int16 PulseWidth,int8 LoadState,int1 TriacState}"
V G "LoadStruct" 16 69 "load_struct"
V G "TMR4IntrCnt1" 16 70 "int16"
V G "TMR4IntrCnt2" 16 71 "int16"
D G "__LUMCONTROL__" 17 2 ""
F G "initLumMonitor" 17 4 "void()"
D G "__RTCC__" 18 2 ""
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
C L "initLumMonitor" 19 1 1 "FUNCTION"
T G "tm_struct" 19 14 "{sint16 tm_sec,sint16 tm_min,sint16 tm_hour,sint16 tm_mday,sint16 tm_mon,sint16 tm_year,sint16 tm_wday,sint16 tm_yday,sint16 tm_isdst}"
V G "DaysToMonth" 19 16 "int32[13]"
F G "DS1371_DateToBinary" 19 18 "int32()"
V L "datetime" 19 18 "*tm_struct"
V L "iday" 19 20 "int32"
V L "Val" 19 21 "int32"
F G "DS1371_BinaryToDate" 19 32 "void()"
V L "binary" 19 32 "int32"
V L "datetime" 19 32 "*tm_struct"
V L "hour" 19 34 "int32"
V L "day" 19 35 "int32"
V L "minute" 19 36 "int32"
V L "second" 19 37 "int32"
V L "month" 19 38 "int32"
V L "year" 19 39 "int32"
V L "whole_minutes" 19 40 "int32"
V L "whole_hours" 19 41 "int32"
V L "whole_days" 19 42 "int32"
V L "whole_days_since_1968" 19 43 "int32"
V L "leap_year_periods" 19 44 "int32"
V L "days_since_current_lyear" 19 45 "int32"
V L "whole_years" 19 46 "int32"
V L "days_since_first_of_year" 19 47 "int32"
V L "days_to_month" 19 48 "int32"
V L "day_of_week" 19 49 "int32"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 2 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
C L "DS1371_BinaryToDate" 19 1 1 "FUNCTION"
D G "MM_JAN" 18 29 "1"
D G "MM_FEB" 18 30 "2"
D G "MM_MAR" 18 31 "3"
D G "MM_APR" 18 32 "4"
D G "MM_MAY" 18 33 "5"
D G "MM_JUN" 18 34 "6"
D G "MM_JUL" 18 35 "7"
D G "MM_AUG" 18 36 "8"
D G "MM_SEP" 18 37 "9"
D G "MM_OCT" 18 38 "10"
D G "MM_NOV" 18 39 "11"
D G "MM_DEC" 18 40 "12"
D G "ALARM_WAKE_TIMEOUT_SEC" 18 42 "60"
D G "ALARM_MAX_SNOOZE_COUNT" 18 43 "3"
D G "RTCC_MAX_DAY_LOOKAHEAD" 18 44 "7"
D G "SEC_IN_A_DAY" 18 45 "86400"
D G "RTCC_STANDBY_TIMEOUT" 18 46 "180"
D G "RTCC_PW_TH_MAX" 18 47 " (DEFAULT_PULSE_WIDTH_DEFAULT + 10)"
V G "ALARM_DAYS" 18 49 "sint8[1]"
V G "AlarmSnoozeTime" 18 50 "int8"
V G "ALARM_ENABLED" 18 51 "int1"
V G "AlarmLampOn" 18 52 "int1"
F G "RTCC_IncSecond" 18 54 "void()"
F G "setDateAndTime" 18 55 "void()"
V L "year" 18 55 "sint8"
V L "month" 18 55 "sint8"
V L "day" 18 55 "sint8"
V L "hour" 18 55 "sint8"
V L "minute" 18 55 "sint8"
V L "second" 18 55 "sint8"
F G "isDateTimeEqualTo" 18 56 "int8()"
V L "year" 18 56 "sint8"
V L "month" 18 56 "sint8"
V L "day" 18 56 "sint8"
V L "hour" 18 56 "sint8"
V L "minute" 18 56 "sint8"
V L "second" 18 56 "sint8"
F G "timeToStruct" 18 57 "void()"
V L "returnTimeStruct" 18 57 "*tm_struct"
V L "year" 18 57 "sint8"
V L "month" 18 57 "sint8"
V L "day" 18 57 "sint8"
V L "hour" 18 57 "sint8"
V L "minute" 18 57 "sint8"
V L "second" 18 57 "sint8"
F G "testRTCC" 18 58 "void()"
F G "InitRTCC" 18 59 "void()"
F G "RTCC_CheckForWake" 18 60 "void()"
F G "RTCC_CheckForEnablingAlarm" 18 61 "void()"
F G "timeStructToMinute" 18 62 "sint32()"
V L "timeStruct" 18 62 "?"
F G "PowerToTimeOn" 18 63 "float()"
V L "x" 18 63 "float"
F G "AlarmStateMachine" 18 64 "void()"
F G "RTCC_TransitionToSTANDBY" 18 65 "void()"
F G "FindNextAlarmTime" 18 66 "void()"
V G "CurrentTime" 18 68 "tm_struct"
V G "AlarmTime" 18 69 "tm_struct"
V G "SnoozeTime" 18 70 "tm_struct" "enum ALARM_STATE alarmState = ALARM_STANDBY;"
D G "__USERINPUT__" 20 2 ""
D G "WAIT_PHASE_SEL" 20 9 "0"
D G "WAIT_PULSE_SEL" 20 10 "1"
D G "SEL_COUNT" 20 11 "2"
D G "PUSH_BUTTON_TIMEOUT_SEC" 20 13 "10"
F G "initUserInput" 20 15 "void()"
F G "encoderMonitoring" 20 16 "void()"
F G "switchInputContext" 20 17 "void()"
V G "lastUserPush" 20 19 "int32"
C L "switchInputContext" 0 3 1 "FUNCTION"
F G "transmitTLV" 21 4 "void()"
V L "arrayToSend" 21 4 "*sint8"
V L "length" 21 4 "sint8"
V L "j" 21 6 "sint8"
F G "transmitTLV" 21 15 "void(sint8 length)"
V L "arrayToSend" 21 15 "*sint8"
V L "length" 21 15 "sint8"
V L "tlvID" 21 15 "sint8"
V L "j" 21 17 "sint8"
F G "TransmitDataStreaming" 21 28 "void(sint8 length,sint8 tlvID)"
C L "TIMER5_isr" 22 1 1 "*"
C L "TIMER5_isr" 22 1 1 "*"
C L "TIMER5_isr" 22 1 1 "*"
C L "TIMER5_isr" 22 1 1 "*"
F G "TIMER5_isr" 22 13 "void(sint8 length,sint8 tlvID)"
F G "initRGBLighting" 22 39 "void(sint8 tlvID)"
C L "RGBtoHSV" 22 1 17 "FUNCTION"
F G "RGBtoHSV" 22 80 "void(sint8 tlvID)"
V L "RGB" 22 80 "*RGB"
V L "HSV" 22 80 "*HSV"
F G "HSVtoRGB" 22 85 "void(*RGB RGB,*HSV HSV)"
V L "HSV" 22 85 "*HSV"
V L "RGB" 22 85 "*RGB"
V L "cc" 22 87 "int16"
V L "c" 22 88 "float"
V L "h1" 22 89 "float"
C L "HSVtoRGB" 22 1 2 "FUNCTION"
V L "x" 22 92 "float"
V L "r1" 22 93 "float"
V L "g1" 22 94 "float"
V L "b1" 22 95 "float"
V L "m" 22 129 "float"
F G "UpdateRGB_Out" 22 137 "void()"
V L "RGB" 22 137 "*RGB"
F G "IncreaseHue" 22 164 "void(*RGB RGB)"
V L "HSV" 22 164 "*HSV"
V G "ADC_LUM_AMB" 23 3 "int16"
C L "initLumMonitor" 23 4 1 "FUNCTION"
F G "initLumMonitor" 23 6 "void()"
F G "readLumMonitor" 23 12 "void()"
D G "PHASE_STATS_SIZE" 24 4 "16"
V G "phaseStatsIndex" 24 8 "sint8"
V G "previousSyncSatus" 24 9 "int1"
V G "syncTransitions" 24 10 "sint16"
V G "currentSyncStatus" 24 11 "int1"
V G "pushButtonStates" 24 12 "int1[3]"
V G "pushAck" 24 13 "int1"
V G "pushLongAck" 24 14 "int1"
V G "highTimeLocal" 24 31 "WORD_VAL"
V G "lowTimeLocal" 24 32 "WORD_VAL" "const int16 PowerLUT[11] = 	{35075, 42970, 45310, 47156,"
D G "DEFAULT_PULSE_PHASE_OFFSET" 24 37 "0"
D G "DEFAULT_PULSE_WIDTH_DEFAULT" 24 38 "93" "25 us."
D G "PHASE_WAIT" 24 40 "0"
D G "PULSE_WAIT" 24 41 "1"
V G "pulseState" 24 43 "int1"
V G "light_t_on" 24 49 "float"
V G "light_on_time" 24 50 "int32"
V G "light_power" 24 51 "float" "0 to 1 scale.							*"
C L "CNI_isr" 24 53 1 "*"
C L "CNI_isr" 24 53 1 "*"
C L "CNI_isr" 24 53 1 "*"
C L "CNI_isr" 24 53 1 "*"
C L "CNI_isr" 24 53 1 "*"
C L "CNI_isr" 24 53 1 "*"
C L "CNI_isr" 24 53 1 "*"
C L "CNI_isr" 24 53 1 "*"
C L "CNI_isr" 24 53 1 "*"
F G "CNI_isr" 24 74 "void()"
C L "CNI_isr" 24 53 1 "FUNCTION"
C L "CNI_isr" 24 53 2 "FUNCTION"
C L "CNI_isr" 24 53 3 "FUNCTION"
C L "CNI_isr" 24 53 1 "FUNCTION"
F G "TIMER4_isr" 24 126 "void()"
C L "TIMER4_isr" 24 53 1 "FUNCTION"
C L "TIMER4_isr" 24 53 1 "FUNCTION"
C L "TIMER4_isr" 24 53 1 "FUNCTION"
C L "TIMER4_isr" 24 53 1 "FUNCTION"
C L "InitLoadControl" 24 152 1 "*"
C L "InitLoadControl" 24 152 1 "*"
C L "InitLoadControl" 24 152 1 "*"
C L "InitLoadControl" 24 152 1 "*"
C L "InitLoadControl" 24 152 1 "*"
C L "InitLoadControl" 24 152 1 "*"
F G "InitLoadControl" 24 168 "void()"
C L "InitLoadControl" 24 152 2 "FUNCTION"
C L "InitLoadControl" 24 152 1 "FUNCTION"
C L "InitLoadControl" 24 152 1 "FUNCTION"
C L "InitLoadControl" 24 152 1 "FUNCTION"
F G "CalculateLuminosity" 24 196 "void()" "---------- COMPUTE LIGHT POWER --------- *"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 8 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "CalculateLuminosity" 24 152 1 "FUNCTION"
C L "SetLampIntensity" 24 243 1 "*"
C L "SetLampIntensity" 24 243 1 "*"
C L "SetLampIntensity" 24 243 1 "*"
C L "SetLampIntensity" 24 243 1 "*"
C L "SetLampIntensity" 24 243 1 "*"
C L "SetLampIntensity" 24 243 1 "*"
F G "SetLampIntensity" 24 259 "void()"
V L "intensity" 24 259 "float"
V L "userDefinedPower" 24 261 "float"
F G "monitorSync" 24 267 "void()"
V L "currentSyncSatus" 24 269 "int1"
C L "TurnTriacOn" 24 277 1 "*"
C L "TurnTriacOn" 24 277 1 "*"
C L "TurnTriacOn" 24 277 1 "*"
C L "TurnTriacOn" 24 277 1 "*"
C L "TurnTriacOn" 24 277 1 "*"
C L "TurnTriacOn" 24 277 1 "*"
F G "TurnTriacOn" 24 293 "void()"
C L "TurnLoadCtrlLow" 24 302 1 "*"
C L "TurnLoadCtrlLow" 24 302 1 "*"
C L "TurnLoadCtrlLow" 24 302 1 "*"
C L "TurnLoadCtrlLow" 24 302 1 "*"
C L "TurnLoadCtrlLow" 24 302 1 "*"
C L "TurnLoadCtrlLow" 24 302 1 "*"
F G "TurnLoadCtrlLow" 24 318 "void()"
C L "TurnLoadCtrlLow" 24 302 1 "FUNCTION"
C L "TurnLoadCtrlHigh" 24 324 1 "*"
C L "TurnLoadCtrlHigh" 24 324 1 "*"
C L "TurnLoadCtrlHigh" 24 324 1 "*"
C L "TurnLoadCtrlHigh" 24 324 1 "*"
C L "TurnLoadCtrlHigh" 24 324 1 "*"
C L "TurnLoadCtrlHigh" 24 324 1 "*"
F G "TurnLoadCtrlHigh" 24 340 "void()"
C L "TurnLoadCtrlHigh" 24 324 1 "FUNCTION"
C L "TurnTriacOff" 24 346 1 "*"
C L "TurnTriacOff" 24 346 1 "*"
C L "TurnTriacOff" 24 346 1 "*"
C L "TurnTriacOff" 24 346 1 "*"
C L "TurnTriacOff" 24 346 1 "*"
C L "TurnTriacOff" 24 346 1 "*"
F G "TurnTriacOff" 24 362 "void()"
C L "initLCD" 24 346 22 "FUNCTION"
F G "initLCD" 25 3 "void()" "Power on the LCD.                        *"
C L "initLCD" 25 8 1 "FUNCTION"
C L "initLCD" 25 8 1 "FUNCTION"
C L "initLCD" 25 8 1 "FUNCTION"
C L "initLCD" 25 8 3 "FUNCTION"
C L "initLCD" 25 8 1 "FUNCTION"
C L "initLCD" 25 8 1 "FUNCTION"
C L "initLCD" 25 8 1 "FUNCTION"
V L "i" 25 35 "sint16" "Clear LCD DDRAM"
F G "shutdownLCD" 25 48 "void()"
F G "writeToLCD" 25 55 "void()"
V L "MSB" 25 55 "int8"
V L "LSB" 25 55 "int8"
F G "writeByte" 25 65 "void(int8 MSB,int8 LSB)"
V L "b" 25 65 "int8"
V L "i" 25 67 "sint16" "Most significant bit first"
F G "writeToDDRAM" 25 79 "void(int8 LSB)"
V L "arrayPtr" 25 79 "*int8"
V L "arraySize" 25 79 "int8" "byte testByte;"
C L "writeToDDRAM" 25 8 3 "FUNCTION"
C L "writeToDDRAM" 25 8 1 "FUNCTION"
C L "writeToDDRAM" 25 8 2 "FUNCTION"
F G "writeToDDRAM" 25 97 "void(*int8 arrayPtr,int8 arraySize)"
V L "b" 25 97 "int8"
V L "arraySize" 25 97 "int8"
F G "refreshLCD" 25 105 "void()"
C L "refreshLCD" 25 8 1 "FUNCTION"
F G "clearLCDLines" 25 116 "void()" "initialize LCD lines"
V L "i" 25 119 "sint16"
F G "TIMER3_isr" 26 4 "void()"
F G "initChime" 26 10 "void()" "TMR3 INIT"
C L "initChime" 26 17 1 "FUNCTION"
F G "setChime" 26 29 "void()"
V L "enableChime" 26 29 "int8"
F G "beep" 26 46 "void()"
V L "state" 26 46 "int8"
V G "SnoozeCount" 27 12 "sint8"
F G "timeToStruct" 27 14 "void()"
V L "returnTimeStruct" 27 14 "*tm_struct"
V L "year" 27 14 "sint8"
V L "month" 27 14 "sint8"
V L "day" 27 14 "sint8"
V L "hour" 27 14 "sint8"
V L "minute" 27 14 "sint8"
V L "second" 27 14 "sint8"
F G "updateSnoozeTimeWithAlarmTime" 27 26 "void(*tm_struct returnTimeStruct,sint8 year,sint8 month,sint8 day,sint8 hour,sint8 minute,sint8 second)"
F G "updateAlarmTimeWithCurrentTime" 27 38 "void(sint8 year,sint8 month,sint8 day,sint8 hour,sint8 minute,sint8 second)"
F G "PowerToTimeOn" 27 48 "float(sint8 month,sint8 day,sint8 hour,sint8 minute,sint8 second)"
V L "x" 27 48 "float"
F G "TIMER1_isr" 27 54 "void(float x,sint8 day,sint8 hour,sint8 minute,sint8 second)"
C L "TIMER1_isr" 27 3 1 "FUNCTION"
F G "setDateAndTime" 27 62 "void(sint8 day,sint8 hour,sint8 minute,sint8 second)"
V L "year" 27 62 "sint8"
V L "month" 27 62 "sint8"
V L "day" 27 62 "sint8"
V L "hour" 27 62 "sint8"
V L "minute" 27 62 "sint8"
V L "second" 27 62 "sint8"
C L "InitRTCC" 27 74 1 "*"
C L "InitRTCC" 27 74 1 "*"
C L "InitRTCC" 27 74 1 "*"
C L "InitRTCC" 27 74 1 "*"
C L "InitRTCC" 27 74 1 "*"
C L "InitRTCC" 27 74 1 "*"
F G "InitRTCC" 27 90 "void(sint8 year,sint8 month,sint8 day,sint8 hour,sint8 minute,sint8 second)" "Setup timer for 1 intr. per sec.         *"
C L "InitRTCC" 27 74 1 "FUNCTION"
C L "InitRTCC" 27 74 1 "FUNCTION"
C L "InitRTCC" 27 74 1 "FUNCTION"
C L "InitRTCC" 27 74 1 "FUNCTION"
C L "InitRTCC" 27 74 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "*"
C L "AlarmStateMachine" 27 113 1 "*"
C L "AlarmStateMachine" 27 113 1 "*"
C L "AlarmStateMachine" 27 113 1 "*"
C L "AlarmStateMachine" 27 113 1 "*"
C L "AlarmStateMachine" 27 113 1 "*"
F G "AlarmStateMachine" 27 129 "void(sint8 year,sint8 month,sint8 day,sint8 hour,sint8 minute,sint8 second)"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 3 "FUNCTION"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 3 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 3 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "AlarmStateMachine" 27 113 2 "FUNCTION"
C L "AlarmStateMachine" 27 113 1 "FUNCTION"
C L "FindNextAlarmTime" 27 297 1 "*"
C L "FindNextAlarmTime" 27 297 1 "*"
C L "FindNextAlarmTime" 27 297 1 "*"
C L "FindNextAlarmTime" 27 297 1 "*"
C L "FindNextAlarmTime" 27 297 1 "*"
C L "FindNextAlarmTime" 27 297 1 "*"
F G "FindNextAlarmTime" 27 313 "void(sint8 year,sint8 month,sint8 day,sint8 hour,sint8 minute,sint8 second)"
V L "valid_alarm_time" 27 315 "int1"
V L "temp_alarm_time" 27 316 "int32"
V L "day_counter" 27 317 "sint8"
C L "FindNextAlarmTime" 27 297 1 "FUNCTION"
C L "FindNextAlarmTime" 27 297 1 "FUNCTION"
C L "FindNextAlarmTime" 27 297 2 "FUNCTION"
C L "FindNextAlarmTime" 27 297 1 "FUNCTION"
C L "FindNextAlarmTime" 27 297 1 "FUNCTION"
C L "FindNextAlarmTime" 27 297 1 "FUNCTION"
C L "RTCC_TransitionToSTANDBY" 27 346 1 "*"
C L "RTCC_TransitionToSTANDBY" 27 346 1 "*"
C L "RTCC_TransitionToSTANDBY" 27 346 1 "*"
C L "RTCC_TransitionToSTANDBY" 27 346 1 "*"
C L "RTCC_TransitionToSTANDBY" 27 346 1 "*"
C L "RTCC_TransitionToSTANDBY" 27 346 1 "*"
F G "RTCC_TransitionToSTANDBY" 27 362 "void(sint8 hour,sint8 minute,sint8 second)"
V G "ENCA_value" 28 3 "int1"
V G "ENCB_value" 28 4 "int1"
V G "PUSH_value" 28 5 "int1"
V G "previous_PUSH" 28 7 "int1"
V G "contextEnum" 28 8 "sint16"
F G "QEI_isr" 28 11 "void()"
F G "initUserInput" 28 16 "void()"
F G "encoderMonitoring" 28 24 "void()"
F G "switchInputContext" 28 30 "void()"
F G "addSelector" 28 35 "void()"
C G "" 29 2 1 "*"
C G "" 29 3 1 "*"
C G "" 29 5 1 "*"
C G "" 29 6 1 "*"
C G "" 29 8 13 "*"
D G "SET_CURSOR_HOME" 30 2 " (writeToLCD(LCD_WRITE_CFG,LCD_CSR_HM))"
D G "DISABLE_BLINKING_AND_CURSOR" 30 3 " (writeToLCD(LCD_WRITE_CFG,LCD_DSPL_BOFF))"
D G "ENABLE_BLINKING_AND_CURSOR" 30 4 " (writeToLCD(LCD_WRITE_CFG,LCD_DSPL_DFTL))"
F G "EditMenu" 30 7 "void()"
V L "currentPOS" 30 9 "sint16"
V L "previousPOS" 30 10 "sint16"
V L "exitMenu" 30 11 "int1"
V L "cursorLocation" 30 12 "sint8"
C L "EditMenu" 30 14 1 "FUNCTION"
V L "direction" 30 17 "int1"
V L "firstLoopRun" 30 18 "int1"
V L "i" 30 40 "sint16"
C L "EditMenu" 30 14 1 "FUNCTION"
C L "EditMenu" 30 14 1 "FUNCTION"
F G "EditDateAndTime" 30 98 "void()"
V L "currentPOS" 30 101 "sint16"
V L "previousPOS" 30 102 "sint16"
V L "exitEditDateAndTime" 30 103 "int1"
V L "cursorLocation" 30 104 "sint8"
V L "direction" 30 105 "int1"
V L "firstLoopRun" 30 106 "int1"
C L "EditDateAndTime" 30 14 1 "FUNCTION"
V L "i" 30 131 "sint16"
C L "EditDateAndTime" 30 14 1 "FUNCTION"
C L "EditDateAndTime" 30 14 2 "FUNCTION"
C L "EditDateAndTime" 30 14 1 "FUNCTION"
C L "EditDateAndTime" 30 14 1 "FUNCTION"
F G "EditAlarmDays" 30 187 "void()"
V L "currentPOS" 30 189 "sint16"
V L "previousPOS" 30 190 "sint16"
V L "exitMenu" 30 191 "int1"
V L "cursorLocation" 30 192 "sint8"
C L "EditAlarmDays" 30 14 1 "FUNCTION"
V L "direction" 30 197 "int1"
V L "firstLoopRun" 30 198 "int1"
V L "i" 30 218 "sint16"
C L "EditAlarmDays" 30 14 1 "FUNCTION"
F G "EditAlarmTime" 30 253 "void()"
V L "currentPOS" 30 255 "sint16"
V L "previousPOS" 30 256 "sint16"
V L "exitMenu" 30 257 "int1"
V L "cursorLocation" 30 258 "sint8"
C L "EditAlarmTime" 30 14 1 "FUNCTION"
V L "direction" 30 263 "int1"
V L "firstLoopRun" 30 264 "int1"
V L "i" 30 284 "sint16"
C L "EditAlarmTime" 30 14 1 "FUNCTION"
C L "EditAlarmTime" 30 14 1 "FUNCTION"
F G "EditLoadLighting" 30 340 "void()"
V L "currentPOS" 30 342 "sint16"
V L "previousPOS" 30 343 "sint16"
V L "exitMenu" 30 344 "int1"
V L "cursorLocation" 30 345 "sint8"
C L "EditLoadLighting" 30 14 1 "FUNCTION"
V L "direction" 30 350 "int1"
V L "firstLoopRun" 30 351 "int1"
V L "i" 30 371 "sint16"
C L "EditLoadLighting" 30 14 1 "FUNCTION"
F G "EditBattery" 30 405 "void()"
F G "EditVolume" 30 408 "void()"
V L "currentPOS" 30 410 "sint16"
V L "previousPOS" 30 411 "sint16"
V L "exitMenu" 30 412 "int1"
V L "cursorLocation" 30 413 "sint8"
C L "EditVolume" 30 14 1 "FUNCTION"
V L "direction" 30 418 "int1"
V L "firstLoopRun" 30 419 "int1"
V L "i" 30 440 "sint16"
C L "EditVolume" 30 14 1 "FUNCTION"
F G "EditCarillon" 30 474 "void()"
V L "currentPOS" 30 476 "sint16"
V L "previousPOS" 30 477 "sint16"
V L "exitMenu" 30 478 "int1"
V L "cursorLocation" 30 479 "sint8"
C L "EditCarillon" 30 14 1 "FUNCTION"
V L "direction" 30 484 "int1"
V L "firstLoopRun" 30 485 "int1"
V L "i" 30 506 "sint16"
C L "EditCarillon" 30 14 1 "FUNCTION"
F G "EditAlarmSnooze" 30 539 "void()"
V L "currentPOS" 30 541 "sint16"
V L "previousPOS" 30 542 "sint16"
V L "exitMenu" 30 543 "int1"
V L "cursorLocation" 30 544 "sint8"
C L "EditAlarmSnooze" 30 14 1 "FUNCTION"
V L "direction" 30 549 "int1"
V L "firstLoopRun" 30 550 "int1"
V L "i" 30 570 "sint16"
C L "EditAlarmSnooze" 30 14 1 "FUNCTION"
F G "EditRGBLighting" 30 603 "void()"
V L "currentPOS" 30 605 "sint16"
V L "previousPOS" 30 606 "sint16"
V L "exitMenu" 30 607 "int1"
V L "cursorLocation" 30 608 "sint8"
C L "EditRGBLighting" 30 14 1 "FUNCTION"
V L "direction" 30 613 "int1"
V L "firstLoopRun" 30 614 "int1"
V L "i" 30 634 "sint16"
C L "EditRGBLighting" 30 14 1 "FUNCTION"
F G "EditPowerCtrls" 30 675 "void()"
V L "currentPOS" 30 677 "sint16"
V L "previousPOS" 30 678 "sint16"
V L "exitMenu" 30 679 "int1"
V L "cursorLocation" 30 680 "sint8"
C L "EditPowerCtrls" 30 14 1 "FUNCTION"
V L "direction" 30 685 "int1"
V L "firstLoopRun" 30 686 "int1"
C L "EditPowerCtrls" 30 14 1 "FUNCTION"
V L "i" 30 706 "sint16"
C L "EditPowerCtrls" 30 14 1 "FUNCTION"
C L "EditPowerCtrls" 30 14 1 "FUNCTION"
C L "EditPowerCtrls" 30 14 1 "FUNCTION"
F G "editField" 30 740 "void()"
V L "field" 30 740 "*int8"
V L "minimum" 30 740 "int8"
V L "maximum" 30 740 "int8"
V L "displayFunction" 30 740 "funPtr" "PUSH POSCNT CONTEXT"
V L "initialPOSCNT" 30 743 "sint16"
C L "editField" 30 14 1 "FUNCTION"
V L "previousPOS" 30 747 "sint16"
V L "currentPOS" 30 748 "sint16"
C L "editField" 30 14 1 "FUNCTION"
C L "editField" 30 14 1 "FUNCTION"
C L "editField" 30 14 1 "FUNCTION"
F G "editIntField" 30 785 "void(funPtr displayFunction)"
V L "field" 30 785 "*sint16"
V L "minimum" 30 785 "sint16"
V L "maximum" 30 785 "sint16"
V L "displayFunction" 30 785 "funPtr" "PUSH POSCNT CONTEXT"
V L "initialPOSCNT" 30 788 "sint16"
C L "editIntField" 30 14 1 "FUNCTION"
V L "previousPOS" 30 792 "sint16"
V L "currentPOS" 30 793 "sint16"
C L "editIntField" 30 14 1 "FUNCTION"
C L "editIntField" 30 14 1 "FUNCTION"
C L "displayEditDateAndTime" 30 14 1 "FUNCTION"
F G "displayEditDateAndTime" 30 833 "void(funPtr displayFunction)"
C L "displayEditDateAndTime" 30 14 2 "FUNCTION"
F G "displayEditAlarmOptions" 30 843 "void()"
C L "displayEditAlarmOptions" 30 14 2 "FUNCTION"
F G "displayEditAlarmTime" 30 853 "void()"
C L "displayEditAlarmTime" 30 14 1 "FUNCTION"
C L "displayEditAlarmTime" 30 14 1 "FUNCTION"
F G "displayCarillon" 30 876 "void()"
C L "displayCarillon" 30 14 2 "FUNCTION"
F G "displayLoadLighting" 30 893 "void()"
C L "displayLoadLighting" 30 14 2 "FUNCTION"
F G "displayAlarmDays" 30 903 "void()" "ALARM_DAYS"
V L "i" 30 908 "sint16"
C L "displayAlarmDays" 30 14 2 "FUNCTION"
F G "displaySnooze" 30 925 "void()"
C L "displaySnooze" 30 14 2 "FUNCTION"
F G "displayRGBLight" 30 935 "void()"
C L "displayRGBLight" 30 14 2 "FUNCTION"
C L "displayRGBLight" 30 14 1 "FUNCTION"
F G "displayVolume" 30 958 "void()"
C L "displayVolume" 30 14 2 "FUNCTION"
F G "displayPowerCtrls" 30 968 "void()"
C L "displayPowerCtrls" 30 14 1 "FUNCTION"
D G "ENABLE_LCD_REFRESH" 0 15 "1"
F G "RDA_isr" 0 19 "void()"
C L "RDA_isr" 0 21 1 "FUNCTION"
F G "TBE_isr" 0 25 "void()"
C L "TBE_isr" 0 21 1 "FUNCTION"
F G "ADC1_isr" 0 31 "void()"
C L "ADC1_isr" 0 21 1 "FUNCTION"
F G "ADDRERR_isr" 0 37 "void()"
F G "default_isr" 0 43 "void()"
F G "MAIN" 0 51 "void()"
C L "MAIN" 0 21 1 "FUNCTION"
C L "MAIN" 0 21 9 "FUNCTION"
C L "MAIN" 0 21 2 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "bit_first" 2 0
F B "bit_last" 1 2
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "dsp_a" 1 2
F B "dsp_b" 1 2
F B "read_eeprom" 1 3
F B "write_eeprom" 2 3
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_memory" 1 0
F B "write_program_memory" 3 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "output_f" 1 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "input_f" 0 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "set_tris_f" 1 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "get_tris_f" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "input_change_f" 0 0
F B "set_pullup" 1 2
F B "setup_wdt" 1 0
F B "restart_cause" 0 1
F B "restart_wdt" 0 0
F B "setup_oscillator" 1 3
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer1" 1 2
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer2" 1 2
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer3" 1 2
F B "get_timer3" 0 0
F B "set_timer3" 1 0
F B "get_timer23" 0 0
F B "set_timer23" 1 0
F B "setup_capture" 2 0
F B "get_capture" 1 2
F B "setup_compare" 2 0
F B "set_compare_time" 2 3
F B "set_pwm_duty" 2 0
F B "setup_low_volt_detect" 1 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "setup_spi3" 1 0
F B "spi_read3" 0 1
F B "spi_write3" 1 0
F B "spi_data_is_in3" 0 0
F B "setup_qei" 1 4
F B "qei_set_count" 1 2
F B "qei_get_count" 0 1
F B "qei_status" 0 1
F B "setup_motor_pwm" 2 5
F B "set_motor_unit" 5 0
F B "set_motor_pwm_duty" 3 0
F B "set_motor_pwm_event" 2 0
F B "get_motor_pwm_count" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 2
F B "setup_uart" 1 2
